(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun i () Int)
(declare-fun n () Int)
(declare-fun c () Int)
(push 1)
(set-info :boogie-vc-id |invariant inference check|)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (and (and (not (<= c (- 0 1))) (< i n)) (< i n)) (not (<= (+ c i) (- 0 1))))
))
(check-sat)
(pop 1)
(declare-fun |i'| () Int)
(declare-fun |c'| () Int)
(push 1)
(set-info :boogie-vc-id |invariant inference check|)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (and (and (not (or (<= c (- 0 1)) (and (or (<= c (- 0 1)) (<= i (- 0 1))) (<= (+ i (* (- 0 1) c)) (- 0 1))))) (< i n)) (< i n)) (not (or (<= (+ c i) (- 0 1)) (and (or (<= (+ c i) (- 0 1)) (<= (+ i 1) (- 0 1))) (<= (+ (+ i 1) (* (- 0 1) (+ c i))) (- 0 1))))))
))
(check-sat)
(pop 1)
(push 1)
(set-info :boogie-vc-id |invariant inference check|)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (not (and (not (or (<= c (- 0 1)) (and (or (<= c (- 0 1)) (<= i (- 0 1))) (<= (+ i (* (- 0 1) c)) (- 0 1))))) (not (< i n))))
))
(check-sat)
(pop 1)
