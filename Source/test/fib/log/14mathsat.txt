(set-option :print-success false)
(set-info :smt-lib-version 2.6)
; done setting options


(declare-fun j () Int)
(declare-fun m () Int)
(declare-fun a () Int)
(push 1)
(define-fun A () Bool  (and (not (<= j m)) (not (=> (< m j) (and (>= a (- 0 m)) (<= a m))))))
(define-fun B () Bool  (and (and (= a 0) (> m 0)) (= j 1)))
(assert (! A :interpolation-group g1))
(assert (! B :interpolation-group g2))
(check-sat)
(get-interpolant (g1))
(pop 1)
(declare-fun |a'| () Int)
(declare-fun |j'| () Int)
(declare-fun u () Bool)
(declare-fun call0formal@u@@0 () Bool)
(declare-fun |a'@@0| () Int)
(push 1)
(define-fun A () Bool (or (<= 1 (+ j (* (- 0 1) m))) (and (<= j m) (=> (<= j m) (<= 0 (+ j (* (- 1) m)))))))
(define-fun B () Bool  (or (and (and (= a 0) (> m 0)) (= j 1)) (and (or (and (and (and (and (and (and (and (= |a'| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= u call0formal@u@@0)) u) (= a (+ |a'| 1))) (and (and (and (and (and (and (and (= |a'@@0| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= u call0formal@u@@0)) (not u)) (= a (- |a'@@0| 1)))) (= j (+ |j'| 1)))))
(assert (! A :interpolation-group g1))
(assert (! B :interpolation-group g2))
(check-sat)
(pop 1)
(push 1)
(define-fun A () Bool (or (and (not (<= j m)) (not (=> (< m j) (and (>= a (- 0 m)) (<= a m))))) (and (<= j m) (=> (<= j m) (not (or (not (and (not (<= j (+ (- 1) m))) (not (or (<= j (+ (- 1) m)) (and (>= a (+ 1 (* (- 1) m))) (<= a (+ 1 m))))))) (not (and (not (<= j (+ (- 1) m))) (not (or (<= j (+ (- 1) m)) (and (>= a (+ (- 1) (* (- 1) m))) (<= a (+ (- 1) m)))))))))))))
(define-fun B () Bool  (or (and (and (= a 0) (> m 0)) (= j 1)) (and (or (and (and (and (and (and (and (and (= |a'| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= u call0formal@u@@0)) u) (= a (+ |a'| 1))) (and (and (and (and (and (and (and (= |a'@@0| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= u call0formal@u@@0)) (not u)) (= a (- |a'@@0| 1)))) (= j (+ |j'| 1)))))
(assert (! A :interpolation-group g1))
(assert (! B :interpolation-group g2))
(check-sat)
(get-interpolant (g1))
(pop 1)
(declare-fun |u'| () Bool)
(declare-fun |call0formal@u'| () Bool)
(declare-fun |a'@@1| () Int)
(declare-fun |j'@@0| () Int)
(declare-fun |a'@@2| () Int)
(push 1)
(define-fun A () Bool (or (and (not (and (not (<= m a)) (not (<= (+ m a) (- 0 1))) (not (<= (+ m a) (- 0 2))) (not (<= (+ m (* (- 0 1) a)) (- 0 1))))) (not (and (or (and (not (<= m a)) (not (<= (+ m a) (- 0 1))) (not (<= (+ m a) (- 0 2))) (not (<= (+ m (* (- 0 1) a)) (- 0 1)))) (and (not (<= m 0)) (not (and (or (<= m 0) (and (<= 1 (+ j (* (- 0 1) m))) (<= (+ m a) (- 0 1)))) (not (and (not (<= m a)) (not (<= (+ m a) (- 0 1))) (not (<= (+ m a) (- 0 2))) (not (<= (+ m (* (- 0 1) a)) (- 0 1))))))) (not (<= m 0)) (not (and (<= (+ m (* (- 0 1) a)) (- 0 1)) (or (<= 1 (+ j (* (- 0 1) m))) (<= (+ m (* (- 0 1) a)) (- 0 2))))))) (not (and (<= (+ m a) (- 0 1)) (<= (+ m a) (- 0 2))))))) (and (<= j m) (=> (<= j m) (not (or (not (and (not (and (not (<= m (+ 1 a))) (not (<= (+ m a) (- 2))) (not (<= (+ m a) (- 3))) (not (<= (+ m (* (- 1) a)) 0)))) (not (and (or (and (not (<= m (+ 1 a))) (not (<= (+ m a) (- 2))) (not (<= (+ m a) (- 3))) (not (<= (+ m (* (- 1) a)) 0))) (and (not (<= m 0)) (not (and (or (<= m 0) (and (<= 0 (+ j (* (- 1) m))) (<= (+ m a) (- 2)))) (not (and (not (<= m (+ 1 a))) (not (<= (+ m a) (- 2))) (not (<= (+ m a) (- 3))) (not (<= (+ m (* (- 1) a)) 0)))))) (not (and (<= (+ m (* (- 1) a)) 0) (or (<= 0 (+ j (* (- 1) m))) (<= (+ m (* (- 1) a)) (- 1))))))) (not (and (<= (+ m a) (- 2)) (<= (+ m a) (- 3)))))))) (not (and (not (and (not (<= m (+ (- 1) a))) (not (<= (+ m a) 0)) (not (<= (+ m a) (- 1))) (not (<= (+ m (* (- 1) a)) (- 2))))) (not (and (or (and (not (<= m 0)) (not (and (or (<= m 0) (and (<= 0 (+ j (* (- 1) m))) (<= (+ m a) 0))) (not (and (not (<= m (+ (- 1) a))) (not (<= (+ m a) 0)) (not (<= (+ m a) (- 1))) (not (<= (+ m (* (- 1) a)) (- 2))))))) (not (and (<= (+ m (* (- 1) a)) (- 2)) (or (<= 0 (+ j (* (- 1) m))) (<= (+ m (* (- 1) a)) (- 3)))))) (and (not (<= m (+ (- 1) a))) (not (<= (+ m a) 0)) (not (<= (+ m a) (- 1))) (not (<= (+ m (* (- 1) a)) (- 2))))) (not (and (<= (+ m a) 0) (<= (+ m a) (- 1))))))))))))))
(define-fun B () Bool  (or (or (and (and (= a 0) (> m 0)) (= j 1)) (and (or (and (and (and (and (and (and (and (= |a'| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= u call0formal@u@@0)) u) (= a (+ |a'| 1))) (and (and (and (and (and (and (and (= |a'@@0| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= u call0formal@u@@0)) (not u)) (= a (- |a'@@0| 1)))) (= j (+ |j'| 1)))) (and (or (and (and (and (and (and (and (or (and (and (and (and (and (and (and (= |a'| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) |u'|) (= |a'@@1| (+ |a'| 1))) (and (and (and (and (and (and (and (= |a'@@0| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) (not |u'|)) (= |a'@@1| (- |a'@@0| 1)))) (= |j'@@0| (+ |j'| 1))) (<= |j'@@0| m)) (<= |j'@@0| m)) (= u call0formal@u@@0)) u) (= a (+ |a'@@1| 1))) (and (and (and (and (and (and (or (and (and (and (and (and (and (and (= |a'| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) |u'|) (= |a'@@2| (+ |a'| 1))) (and (and (and (and (and (and (and (= |a'@@0| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) (not |u'|)) (= |a'@@2| (- |a'@@0| 1)))) (= |j'@@0| (+ |j'| 1))) (<= |j'@@0| m)) (<= |j'@@0| m)) (= u call0formal@u@@0)) (not u)) (= a (- |a'@@2| 1)))) (= j (+ |j'@@0| 1)))))
(assert (! A :interpolation-group g1))
(assert (! B :interpolation-group g2))
(check-sat)
(get-interpolant (g1))
(pop 1)
(declare-fun |u'@@0| () Bool)
(declare-fun |call0formal@u'@@0| () Bool)
(declare-fun |a'@@3| () Int)
(declare-fun |j'@@1| () Int)
(declare-fun |a'@@4| () Int)
(push 1)
(define-fun A () Bool (or (and (not (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (not (<= m a)))) (and (not (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (not (<= m a)))) (not (and (not (<= m a)) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))) (and (and (not (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (not (<= m a)))) (not (and (not (<= m a)) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))) (not (and (not (and (and (not (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (not (<= m a)))) (not (and (not (<= m a)) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))) (<= m a) (or (<= m 0) (and (or (<= m 0) (and (<= (+ m (* (- 0 1) a)) (- 0 1)) (<= m a))) (<= (+ m (* (- 0 1) a)) (- 0 1)) (not (and (not (<= m a)) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))))) (not (<= m 0)) (not (and (<= (+ m a) (- 0 1)) (not (and (not (<= m a)) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))))))) (not (and (not (and (and (not (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (not (<= m a)))) (not (and (not (<= m a)) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))) (<= (+ m a) (- 0 1)) (and (and (not (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (not (<= m a)))) (not (and (not (<= m a)) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))) (not (and (not (and (and (not (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (not (<= m a)))) (not (and (not (<= m a)) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))) (<= m a) (or (<= m 0) (and (or (<= m 0) (and (<= (+ m (* (- 0 1) a)) (- 0 1)) (<= m a))) (<= (+ m (* (- 0 1) a)) (- 0 1)) (not (and (not (<= m a)) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))))) (not (<= m 0)) (not (and (<= (+ m a) (- 0 1)) (not (and (not (<= m a)) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))))))))) (not (<= m 0)) (not (<= (+ m (* (- 0 1) a)) (- 0 1)))))) (and (<= j m) (=> (<= j m) (not (or (not (and (not (and (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= m (+ 1 a))))) (not (and (not (<= m (+ 1 a))) (not (<= m 0)) (not (<= (+ m a) (- 2))))) (not (and (not (and (not (and (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= m (+ 1 a))))) (not (and (not (<= m (+ 1 a))) (not (<= m 0)) (not (<= (+ m a) (- 2))))) (<= m (+ 1 a)) (or (<= m 0) (and (or (<= m 0) (and (<= (+ m (* (- 1) a)) 0) (<= m (+ 1 a)))) (<= (+ m (* (- 1) a)) 0) (not (and (not (<= m (+ 1 a))) (not (<= m 0)) (not (<= (+ m a) (- 2))))))))) (not (<= m 0)) (not (and (<= (+ m a) (- 2)) (not (and (not (<= m (+ 1 a))) (not (<= m 0)) (not (<= (+ m a) (- 2))))))))) (not (and (not (and (not (and (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= m (+ 1 a))))) (not (and (not (<= m (+ 1 a))) (not (<= m 0)) (not (<= (+ m a) (- 2))))) (<= (+ m a) (- 2)) (not (and (not (and (not (and (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= m (+ 1 a))))) (not (and (not (<= m (+ 1 a))) (not (<= m 0)) (not (<= (+ m a) (- 2))))) (<= m (+ 1 a)) (or (<= m 0) (and (or (<= m 0) (and (<= (+ m (* (- 1) a)) 0) (<= m (+ 1 a)))) (<= (+ m (* (- 1) a)) 0) (not (and (not (<= m (+ 1 a))) (not (<= m 0)) (not (<= (+ m a) (- 2))))))))) (not (<= m 0)) (not (and (<= (+ m a) (- 2)) (not (and (not (<= m (+ 1 a))) (not (<= m 0)) (not (<= (+ m a) (- 2))))))))))) (not (<= m 0)) (not (<= (+ m (* (- 1) a)) 0)))))) (not (and (not (and (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= m (+ (- 1) a))))) (not (and (not (<= m (+ (- 1) a))) (not (<= m 0)) (not (<= (+ m a) 0)))) (not (and (not (and (not (and (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= m (+ (- 1) a))))) (not (and (not (<= m (+ (- 1) a))) (not (<= m 0)) (not (<= (+ m a) 0)))) (<= m (+ (- 1) a)) (or (<= m 0) (and (or (<= m 0) (and (<= (+ m (* (- 1) a)) (- 2)) (<= m (+ (- 1) a)))) (<= (+ m (* (- 1) a)) (- 2)) (not (and (not (<= m (+ (- 1) a))) (not (<= m 0)) (not (<= (+ m a) 0)))))))) (not (<= m 0)) (not (and (<= (+ m a) 0) (not (and (not (<= m (+ (- 1) a))) (not (<= m 0)) (not (<= (+ m a) 0)))))))) (not (and (not (and (not (and (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= m (+ (- 1) a))))) (not (and (not (<= m (+ (- 1) a))) (not (<= m 0)) (not (<= (+ m a) 0)))) (<= (+ m a) 0) (not (and (not (and (not (and (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= m (+ (- 1) a))))) (not (and (not (<= m (+ (- 1) a))) (not (<= m 0)) (not (<= (+ m a) 0)))) (<= m (+ (- 1) a)) (or (<= m 0) (and (or (<= m 0) (and (<= (+ m (* (- 1) a)) (- 2)) (<= m (+ (- 1) a)))) (<= (+ m (* (- 1) a)) (- 2)) (not (and (not (<= m (+ (- 1) a))) (not (<= m 0)) (not (<= (+ m a) 0)))))))) (not (<= m 0)) (not (and (<= (+ m a) 0) (not (and (not (<= m (+ (- 1) a))) (not (<= m 0)) (not (<= (+ m a) 0)))))))))) (not (<= m 0)) (not (<= (+ m (* (- 1) a)) (- 2)))))))))))))
(define-fun B () Bool  (or (or (or (and (and (= a 0) (> m 0)) (= j 1)) (and (or (and (and (and (and (and (and (and (= |a'| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= u call0formal@u@@0)) u) (= a (+ |a'| 1))) (and (and (and (and (and (and (and (= |a'@@0| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= u call0formal@u@@0)) (not u)) (= a (- |a'@@0| 1)))) (= j (+ |j'| 1)))) (and (or (and (and (and (and (and (and (or (and (and (and (and (and (and (and (= |a'| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) |u'|) (= |a'@@1| (+ |a'| 1))) (and (and (and (and (and (and (and (= |a'@@0| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) (not |u'|)) (= |a'@@1| (- |a'@@0| 1)))) (= |j'@@0| (+ |j'| 1))) (<= |j'@@0| m)) (<= |j'@@0| m)) (= u call0formal@u@@0)) u) (= a (+ |a'@@1| 1))) (and (and (and (and (and (and (or (and (and (and (and (and (and (and (= |a'| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) |u'|) (= |a'@@2| (+ |a'| 1))) (and (and (and (and (and (and (and (= |a'@@0| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) (not |u'|)) (= |a'@@2| (- |a'@@0| 1)))) (= |j'@@0| (+ |j'| 1))) (<= |j'@@0| m)) (<= |j'@@0| m)) (= u call0formal@u@@0)) (not u)) (= a (- |a'@@2| 1)))) (= j (+ |j'@@0| 1)))) (and (or (and (and (and (and (and (and (or (and (and (and (and (and (and (or (and (and (and (and (and (and (and (= |a'| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) |u'|) (= |a'@@1| (+ |a'| 1))) (and (and (and (and (and (and (and (= |a'@@0| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) (not |u'|)) (= |a'@@1| (- |a'@@0| 1)))) (= |j'@@0| (+ |j'| 1))) (<= |j'@@0| m)) (<= |j'@@0| m)) (= |u'@@0| |call0formal@u'@@0|)) |u'@@0|) (= |a'@@3| (+ |a'@@1| 1))) (and (and (and (and (and (and (or (and (and (and (and (and (and (and (= |a'| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) |u'|) (= |a'@@2| (+ |a'| 1))) (and (and (and (and (and (and (and (= |a'@@0| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) (not |u'|)) (= |a'@@2| (- |a'@@0| 1)))) (= |j'@@0| (+ |j'| 1))) (<= |j'@@0| m)) (<= |j'@@0| m)) (= |u'@@0| |call0formal@u'@@0|)) (not |u'@@0|)) (= |a'@@3| (- |a'@@2| 1)))) (= |j'@@1| (+ |j'@@0| 1))) (<= |j'@@1| m)) (<= |j'@@1| m)) (= u call0formal@u@@0)) u) (= a (+ |a'@@3| 1))) (and (and (and (and (and (and (or (and (and (and (and (and (and (or (and (and (and (and (and (and (and (= |a'| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) |u'|) (= |a'@@1| (+ |a'| 1))) (and (and (and (and (and (and (and (= |a'@@0| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) (not |u'|)) (= |a'@@1| (- |a'@@0| 1)))) (= |j'@@0| (+ |j'| 1))) (<= |j'@@0| m)) (<= |j'@@0| m)) (= |u'@@0| |call0formal@u'@@0|)) |u'@@0|) (= |a'@@4| (+ |a'@@1| 1))) (and (and (and (and (and (and (or (and (and (and (and (and (and (and (= |a'| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) |u'|) (= |a'@@2| (+ |a'| 1))) (and (and (and (and (and (and (and (= |a'@@0| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) (not |u'|)) (= |a'@@2| (- |a'@@0| 1)))) (= |j'@@0| (+ |j'| 1))) (<= |j'@@0| m)) (<= |j'@@0| m)) (= |u'@@0| |call0formal@u'@@0|)) (not |u'@@0|)) (= |a'@@4| (- |a'@@2| 1)))) (= |j'@@1| (+ |j'@@0| 1))) (<= |j'@@1| m)) (<= |j'@@1| m)) (= u call0formal@u@@0)) (not u)) (= a (- |a'@@4| 1)))) (= j (+ |j'@@1| 1)))))
(assert (! A :interpolation-group g1))
(assert (! B :interpolation-group g2))
(check-sat)
(get-interpolant (g1))
(pop 1)
(declare-fun |u'@@1| () Bool)
(declare-fun |call0formal@u'@@1| () Bool)
(declare-fun |a'@@5| () Int)
(declare-fun |j'@@2| () Int)
(declare-fun |a'@@6| () Int)
(push 1)
(define-fun A () Bool (or (not (and (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))) (not (and (not (and (not (<= (+ m (* (- 0 1) a)) (- 0 1))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (and (not (and (not (<= (+ m (* (- 0 1) a)) (- 0 1))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (not (and (not (<= m a)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))) (not (and (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))) (not (and (not (and (not (<= (+ m (* (- 0 1) a)) (- 0 1))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (not (and (not (and (<= (+ m (* (- 0 1) a)) (- 0 1)) (not (and (not (<= m a)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (<= (+ m (* (- 0 1) a)) (- 0 1)) (not (and (not (<= m a)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))) (not (and (not (and (<= (+ m (* (- 0 1) a)) (- 0 1)) (not (and (not (<= m a)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (not (and (not (<= (+ m (* (- 0 1) a)) (- 0 1))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (not (and (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))) (not (and (not (and (not (and (<= (+ m (* (- 0 1) a)) (- 0 1)) (not (and (not (<= m a)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (<= (+ m (* (- 0 1) a)) (- 0 1)) (not (and (not (<= m a)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))) (and (<= (+ m (* (- 0 1) a)) (- 0 1)) (not (and (not (<= m a)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (not (and (not (and (<= (+ m (* (- 0 1) a)) (- 0 1)) (not (and (not (<= m a)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (not (and (not (<= (+ m (* (- 0 1) a)) (- 0 1))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))))))))))))) (<= (+ m (* (- 0 1) a)) (- 0 1)) (not (and (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))) (not (and (and (not (and (not (<= (+ m (* (- 0 1) a)) (- 0 1))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (not (and (not (<= m a)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))) (not (and (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))) (not (and (not (and (not (<= (+ m (* (- 0 1) a)) (- 0 1))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (not (and (not (and (<= (+ m (* (- 0 1) a)) (- 0 1)) (not (and (not (<= m a)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (<= (+ m (* (- 0 1) a)) (- 0 1)) (not (and (not (<= m a)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))) (not (and (not (and (<= (+ m (* (- 0 1) a)) (- 0 1)) (not (and (not (<= m a)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (not (and (not (<= (+ m (* (- 0 1) a)) (- 0 1))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (not (and (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))) (not (and (not (and (not (and (<= (+ m (* (- 0 1) a)) (- 0 1)) (not (and (not (<= m a)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (<= (+ m (* (- 0 1) a)) (- 0 1)) (not (and (not (<= m a)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))) (and (<= (+ m (* (- 0 1) a)) (- 0 1)) (not (and (not (<= m a)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (not (and (not (and (<= (+ m (* (- 0 1) a)) (- 0 1)) (not (and (not (<= m a)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (not (and (not (<= (+ m (* (- 0 1) a)) (- 0 1))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))))))))))))) (<= (+ m (* (- 0 1) a)) (- 0 1)) (not (and (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))) (not (and (<= (+ m (* (- 0 1) a)) (- 0 1)) (and (not (and (not (<= (+ m (* (- 0 1) a)) (- 0 1))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (not (and (not (<= m a)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))) (not (and (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))) (not (and (not (and (not (<= (+ m (* (- 0 1) a)) (- 0 1))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (not (and (not (and (<= (+ m (* (- 0 1) a)) (- 0 1)) (not (and (not (<= m a)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (<= (+ m (* (- 0 1) a)) (- 0 1)) (not (and (not (<= m a)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))) (not (and (not (and (<= (+ m (* (- 0 1) a)) (- 0 1)) (not (and (not (<= m a)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (not (and (not (<= (+ m (* (- 0 1) a)) (- 0 1))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (not (and (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))) (not (and (not (and (not (and (<= (+ m (* (- 0 1) a)) (- 0 1)) (not (and (not (<= m a)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (<= (+ m (* (- 0 1) a)) (- 0 1)) (not (and (not (<= m a)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))) (and (<= (+ m (* (- 0 1) a)) (- 0 1)) (not (and (not (<= m a)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (not (and (not (and (<= (+ m (* (- 0 1) a)) (- 0 1)) (not (and (not (<= m a)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (not (and (not (<= (+ m (* (- 0 1) a)) (- 0 1))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))))))))))))))))) (not (and (not (<= (+ m (* (- 0 1) a)) (- 0 1))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (not (and (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))) (not (and (not (and (not (<= (+ m (* (- 0 1) a)) (- 0 1))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (and (not (and (not (<= (+ m (* (- 0 1) a)) (- 0 1))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (not (and (not (<= m a)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))) (not (and (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))) (not (and (not (and (not (<= (+ m (* (- 0 1) a)) (- 0 1))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (not (and (not (and (<= (+ m (* (- 0 1) a)) (- 0 1)) (not (and (not (<= m a)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (<= (+ m (* (- 0 1) a)) (- 0 1)) (not (and (not (<= m a)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))) (not (and (not (and (<= (+ m (* (- 0 1) a)) (- 0 1)) (not (and (not (<= m a)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (not (and (not (<= (+ m (* (- 0 1) a)) (- 0 1))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (not (and (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))) (not (and (not (and (not (and (<= (+ m (* (- 0 1) a)) (- 0 1)) (not (and (not (<= m a)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (<= (+ m (* (- 0 1) a)) (- 0 1)) (not (and (not (<= m a)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))) (and (<= (+ m (* (- 0 1) a)) (- 0 1)) (not (and (not (<= m a)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (not (and (not (and (<= (+ m (* (- 0 1) a)) (- 0 1)) (not (and (not (<= m a)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (not (and (not (<= (+ m (* (- 0 1) a)) (- 0 1))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))))))))))))) (<= (+ m (* (- 0 1) a)) (- 0 1)) (not (and (not (<= (+ m (* (- 0 1) a)) (- 0 1))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (not (and (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))) (not (and (<= (+ m (* (- 0 1) a)) (- 0 1)) (and (not (and (not (<= (+ m (* (- 0 1) a)) (- 0 1))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (not (and (not (<= m a)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))) (not (and (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))) (not (and (not (and (not (<= (+ m (* (- 0 1) a)) (- 0 1))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (not (and (not (and (<= (+ m (* (- 0 1) a)) (- 0 1)) (not (and (not (<= m a)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (<= (+ m (* (- 0 1) a)) (- 0 1)) (not (and (not (<= m a)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))) (not (and (not (and (<= (+ m (* (- 0 1) a)) (- 0 1)) (not (and (not (<= m a)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (not (and (not (<= (+ m (* (- 0 1) a)) (- 0 1))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (not (and (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))) (not (and (not (and (not (and (<= (+ m (* (- 0 1) a)) (- 0 1)) (not (and (not (<= m a)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (<= (+ m (* (- 0 1) a)) (- 0 1)) (not (and (not (<= m a)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))) (and (<= (+ m (* (- 0 1) a)) (- 0 1)) (not (and (not (<= m a)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (not (and (not (and (<= (+ m (* (- 0 1) a)) (- 0 1)) (not (and (not (<= m a)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1))))))) (not (and (not (<= (+ m (* (- 0 1) a)) (- 0 1))) (and (not (<= (+ m a) (- 0 1))) (not (<= m 0)) (and (not (<= (+ m a) (- 0 2))) (not (<= m 0)) (not (<= (+ m a) (- 0 1)))))))))))))))))))))))))))))))) (and (<= j m) (=> (<= j m) (not (or (and (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= (+ m a) (- 3))) (not (and (not (and (not (<= (+ m (* (- 1) a)) 0)) (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= (+ m a) (- 3))))) (not (and (not (<= m (+ 1 a))) (not (<= (+ m a) (- 3))) (not (<= m 0)) (not (<= (+ m a) (- 2))))) (not (and (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= (+ m a) (- 3))) (not (and (not (and (not (<= (+ m (* (- 1) a)) 0)) (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= (+ m a) (- 3))))) (not (and (not (and (<= (+ m (* (- 1) a)) 0) (not (and (not (<= m (+ 1 a))) (not (<= (+ m a) (- 3))) (not (<= m 0)) (not (<= (+ m a) (- 2))))))) (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= (+ m a) (- 3))))) (<= (+ m (* (- 1) a)) 0) (not (and (not (<= m (+ 1 a))) (not (<= (+ m a) (- 3))) (not (<= m 0)) (not (<= (+ m a) (- 2))))) (not (and (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= (+ m a) (- 3))) (not (and (not (and (not (and (<= (+ m (* (- 1) a)) 0) (not (and (not (<= m (+ 1 a))) (not (<= (+ m a) (- 3))) (not (<= m 0)) (not (<= (+ m a) (- 2))))))) (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= (+ m a) (- 3))))) (<= (+ m (* (- 1) a)) 0) (not (and (not (<= m (+ 1 a))) (not (<= (+ m a) (- 3))) (not (<= m 0)) (not (<= (+ m a) (- 2))))) (not (and (not (<= (+ m (* (- 1) a)) 0)) (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= (+ m a) (- 3))))))))))))) (<= (+ m (* (- 1) a)) 0) (not (and (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= (+ m a) (- 3))) (not (and (not (and (not (<= (+ m (* (- 1) a)) 0)) (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= (+ m a) (- 3))))) (not (and (not (<= m (+ 1 a))) (not (<= (+ m a) (- 3))) (not (<= m 0)) (not (<= (+ m a) (- 2))))) (not (and (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= (+ m a) (- 3))) (not (and (not (and (not (<= (+ m (* (- 1) a)) 0)) (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= (+ m a) (- 3))))) (not (and (not (and (<= (+ m (* (- 1) a)) 0) (not (and (not (<= m (+ 1 a))) (not (<= (+ m a) (- 3))) (not (<= m 0)) (not (<= (+ m a) (- 2))))))) (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= (+ m a) (- 3))))) (<= (+ m (* (- 1) a)) 0) (not (and (not (<= m (+ 1 a))) (not (<= (+ m a) (- 3))) (not (<= m 0)) (not (<= (+ m a) (- 2))))) (not (and (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= (+ m a) (- 3))) (not (and (not (and (not (and (<= (+ m (* (- 1) a)) 0) (not (and (not (<= m (+ 1 a))) (not (<= (+ m a) (- 3))) (not (<= m 0)) (not (<= (+ m a) (- 2))))))) (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= (+ m a) (- 3))))) (<= (+ m (* (- 1) a)) 0) (not (and (not (<= m (+ 1 a))) (not (<= (+ m a) (- 3))) (not (<= m 0)) (not (<= (+ m a) (- 2))))) (not (and (not (<= (+ m (* (- 1) a)) 0)) (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= (+ m a) (- 3))))))))))))) (<= (+ m (* (- 1) a)) 0) (not (and (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= (+ m a) (- 3))) (not (and (<= (+ m (* (- 1) a)) 0) (not (and (not (<= (+ m (* (- 1) a)) 0)) (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= (+ m a) (- 3))))) (not (and (not (<= m (+ 1 a))) (not (<= (+ m a) (- 3))) (not (<= m 0)) (not (<= (+ m a) (- 2))))) (not (and (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= (+ m a) (- 3))) (not (and (not (and (not (<= (+ m (* (- 1) a)) 0)) (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= (+ m a) (- 3))))) (not (and (not (and (<= (+ m (* (- 1) a)) 0) (not (and (not (<= m (+ 1 a))) (not (<= (+ m a) (- 3))) (not (<= m 0)) (not (<= (+ m a) (- 2))))))) (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= (+ m a) (- 3))))) (<= (+ m (* (- 1) a)) 0) (not (and (not (<= m (+ 1 a))) (not (<= (+ m a) (- 3))) (not (<= m 0)) (not (<= (+ m a) (- 2))))) (not (and (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= (+ m a) (- 3))) (not (and (not (and (not (and (<= (+ m (* (- 1) a)) 0) (not (and (not (<= m (+ 1 a))) (not (<= (+ m a) (- 3))) (not (<= m 0)) (not (<= (+ m a) (- 2))))))) (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= (+ m a) (- 3))))) (<= (+ m (* (- 1) a)) 0) (not (and (not (<= m (+ 1 a))) (not (<= (+ m a) (- 3))) (not (<= m 0)) (not (<= (+ m a) (- 2))))) (not (and (not (<= (+ m (* (- 1) a)) 0)) (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= (+ m a) (- 3))))))))))))))))) (not (and (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= (+ m a) (- 3))) (not (and (not (and (not (<= (+ m (* (- 1) a)) 0)) (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= (+ m a) (- 3))))) (not (and (not (<= m (+ 1 a))) (not (<= (+ m a) (- 3))) (not (<= m 0)) (not (<= (+ m a) (- 2))))) (not (and (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= (+ m a) (- 3))) (not (and (not (and (not (<= (+ m (* (- 1) a)) 0)) (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= (+ m a) (- 3))))) (not (and (not (and (<= (+ m (* (- 1) a)) 0) (not (and (not (<= m (+ 1 a))) (not (<= (+ m a) (- 3))) (not (<= m 0)) (not (<= (+ m a) (- 2))))))) (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= (+ m a) (- 3))))) (<= (+ m (* (- 1) a)) 0) (not (and (not (<= m (+ 1 a))) (not (<= (+ m a) (- 3))) (not (<= m 0)) (not (<= (+ m a) (- 2))))) (not (and (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= (+ m a) (- 3))) (not (and (not (and (not (and (<= (+ m (* (- 1) a)) 0) (not (and (not (<= m (+ 1 a))) (not (<= (+ m a) (- 3))) (not (<= m 0)) (not (<= (+ m a) (- 2))))))) (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= (+ m a) (- 3))))) (<= (+ m (* (- 1) a)) 0) (not (and (not (<= m (+ 1 a))) (not (<= (+ m a) (- 3))) (not (<= m 0)) (not (<= (+ m a) (- 2))))) (not (and (not (<= (+ m (* (- 1) a)) 0)) (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= (+ m a) (- 3))))))))))))) (<= (+ m (* (- 1) a)) 0) (not (and (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= (+ m a) (- 3))) (not (and (<= (+ m (* (- 1) a)) 0) (not (and (not (<= (+ m (* (- 1) a)) 0)) (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= (+ m a) (- 3))))) (not (and (not (<= m (+ 1 a))) (not (<= (+ m a) (- 3))) (not (<= m 0)) (not (<= (+ m a) (- 2))))) (not (and (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= (+ m a) (- 3))) (not (and (not (and (not (<= (+ m (* (- 1) a)) 0)) (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= (+ m a) (- 3))))) (not (and (not (and (<= (+ m (* (- 1) a)) 0) (not (and (not (<= m (+ 1 a))) (not (<= (+ m a) (- 3))) (not (<= m 0)) (not (<= (+ m a) (- 2))))))) (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= (+ m a) (- 3))))) (<= (+ m (* (- 1) a)) 0) (not (and (not (<= m (+ 1 a))) (not (<= (+ m a) (- 3))) (not (<= m 0)) (not (<= (+ m a) (- 2))))) (not (and (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= (+ m a) (- 3))) (not (and (not (and (not (and (<= (+ m (* (- 1) a)) 0) (not (and (not (<= m (+ 1 a))) (not (<= (+ m a) (- 3))) (not (<= m 0)) (not (<= (+ m a) (- 2))))))) (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= (+ m a) (- 3))))) (<= (+ m (* (- 1) a)) 0) (not (and (not (<= m (+ 1 a))) (not (<= (+ m a) (- 3))) (not (<= m 0)) (not (<= (+ m a) (- 2))))) (not (and (not (<= (+ m (* (- 1) a)) 0)) (not (<= (+ m a) (- 2))) (not (<= m 0)) (not (<= (+ m a) (- 3)))))))))))))))))))))))))))) (and (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= (+ m a) (- 1))) (not (and (not (and (not (<= (+ m (* (- 1) a)) (- 2))) (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= (+ m a) (- 1))))) (not (and (not (<= m (+ (- 1) a))) (not (<= (+ m a) (- 1))) (not (<= m 0)) (not (<= (+ m a) 0)))) (not (and (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= (+ m a) (- 1))) (not (and (not (and (not (<= (+ m (* (- 1) a)) (- 2))) (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= (+ m a) (- 1))))) (not (and (not (and (<= (+ m (* (- 1) a)) (- 2)) (not (and (not (<= m (+ (- 1) a))) (not (<= (+ m a) (- 1))) (not (<= m 0)) (not (<= (+ m a) 0)))))) (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= (+ m a) (- 1))))) (<= (+ m (* (- 1) a)) (- 2)) (not (and (not (<= m (+ (- 1) a))) (not (<= (+ m a) (- 1))) (not (<= m 0)) (not (<= (+ m a) 0)))) (not (and (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= (+ m a) (- 1))) (not (and (not (and (not (and (<= (+ m (* (- 1) a)) (- 2)) (not (and (not (<= m (+ (- 1) a))) (not (<= (+ m a) (- 1))) (not (<= m 0)) (not (<= (+ m a) 0)))))) (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= (+ m a) (- 1))))) (<= (+ m (* (- 1) a)) (- 2)) (not (and (not (<= m (+ (- 1) a))) (not (<= (+ m a) (- 1))) (not (<= m 0)) (not (<= (+ m a) 0)))) (not (and (not (<= (+ m (* (- 1) a)) (- 2))) (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= (+ m a) (- 1))))))))))))) (<= (+ m (* (- 1) a)) (- 2)) (not (and (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= (+ m a) (- 1))) (not (and (not (and (not (<= (+ m (* (- 1) a)) (- 2))) (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= (+ m a) (- 1))))) (not (and (not (<= m (+ (- 1) a))) (not (<= (+ m a) (- 1))) (not (<= m 0)) (not (<= (+ m a) 0)))) (not (and (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= (+ m a) (- 1))) (not (and (not (and (not (<= (+ m (* (- 1) a)) (- 2))) (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= (+ m a) (- 1))))) (not (and (not (and (<= (+ m (* (- 1) a)) (- 2)) (not (and (not (<= m (+ (- 1) a))) (not (<= (+ m a) (- 1))) (not (<= m 0)) (not (<= (+ m a) 0)))))) (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= (+ m a) (- 1))))) (<= (+ m (* (- 1) a)) (- 2)) (not (and (not (<= m (+ (- 1) a))) (not (<= (+ m a) (- 1))) (not (<= m 0)) (not (<= (+ m a) 0)))) (not (and (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= (+ m a) (- 1))) (not (and (not (and (not (and (<= (+ m (* (- 1) a)) (- 2)) (not (and (not (<= m (+ (- 1) a))) (not (<= (+ m a) (- 1))) (not (<= m 0)) (not (<= (+ m a) 0)))))) (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= (+ m a) (- 1))))) (<= (+ m (* (- 1) a)) (- 2)) (not (and (not (<= m (+ (- 1) a))) (not (<= (+ m a) (- 1))) (not (<= m 0)) (not (<= (+ m a) 0)))) (not (and (not (<= (+ m (* (- 1) a)) (- 2))) (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= (+ m a) (- 1))))))))))))) (<= (+ m (* (- 1) a)) (- 2)) (not (and (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= (+ m a) (- 1))) (not (and (<= (+ m (* (- 1) a)) (- 2)) (not (and (not (<= (+ m (* (- 1) a)) (- 2))) (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= (+ m a) (- 1))))) (not (and (not (<= m (+ (- 1) a))) (not (<= (+ m a) (- 1))) (not (<= m 0)) (not (<= (+ m a) 0)))) (not (and (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= (+ m a) (- 1))) (not (and (not (and (not (<= (+ m (* (- 1) a)) (- 2))) (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= (+ m a) (- 1))))) (not (and (not (and (<= (+ m (* (- 1) a)) (- 2)) (not (and (not (<= m (+ (- 1) a))) (not (<= (+ m a) (- 1))) (not (<= m 0)) (not (<= (+ m a) 0)))))) (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= (+ m a) (- 1))))) (<= (+ m (* (- 1) a)) (- 2)) (not (and (not (<= m (+ (- 1) a))) (not (<= (+ m a) (- 1))) (not (<= m 0)) (not (<= (+ m a) 0)))) (not (and (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= (+ m a) (- 1))) (not (and (not (and (not (and (<= (+ m (* (- 1) a)) (- 2)) (not (and (not (<= m (+ (- 1) a))) (not (<= (+ m a) (- 1))) (not (<= m 0)) (not (<= (+ m a) 0)))))) (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= (+ m a) (- 1))))) (<= (+ m (* (- 1) a)) (- 2)) (not (and (not (<= m (+ (- 1) a))) (not (<= (+ m a) (- 1))) (not (<= m 0)) (not (<= (+ m a) 0)))) (not (and (not (<= (+ m (* (- 1) a)) (- 2))) (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= (+ m a) (- 1))))))))))))))))) (not (and (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= (+ m a) (- 1))) (not (and (not (and (not (<= (+ m (* (- 1) a)) (- 2))) (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= (+ m a) (- 1))))) (not (and (not (<= m (+ (- 1) a))) (not (<= (+ m a) (- 1))) (not (<= m 0)) (not (<= (+ m a) 0)))) (not (and (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= (+ m a) (- 1))) (not (and (not (and (not (<= (+ m (* (- 1) a)) (- 2))) (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= (+ m a) (- 1))))) (not (and (not (and (<= (+ m (* (- 1) a)) (- 2)) (not (and (not (<= m (+ (- 1) a))) (not (<= (+ m a) (- 1))) (not (<= m 0)) (not (<= (+ m a) 0)))))) (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= (+ m a) (- 1))))) (<= (+ m (* (- 1) a)) (- 2)) (not (and (not (<= m (+ (- 1) a))) (not (<= (+ m a) (- 1))) (not (<= m 0)) (not (<= (+ m a) 0)))) (not (and (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= (+ m a) (- 1))) (not (and (not (and (not (and (<= (+ m (* (- 1) a)) (- 2)) (not (and (not (<= m (+ (- 1) a))) (not (<= (+ m a) (- 1))) (not (<= m 0)) (not (<= (+ m a) 0)))))) (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= (+ m a) (- 1))))) (<= (+ m (* (- 1) a)) (- 2)) (not (and (not (<= m (+ (- 1) a))) (not (<= (+ m a) (- 1))) (not (<= m 0)) (not (<= (+ m a) 0)))) (not (and (not (<= (+ m (* (- 1) a)) (- 2))) (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= (+ m a) (- 1))))))))))))) (<= (+ m (* (- 1) a)) (- 2)) (not (and (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= (+ m a) (- 1))) (not (and (<= (+ m (* (- 1) a)) (- 2)) (not (and (not (<= (+ m (* (- 1) a)) (- 2))) (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= (+ m a) (- 1))))) (not (and (not (<= m (+ (- 1) a))) (not (<= (+ m a) (- 1))) (not (<= m 0)) (not (<= (+ m a) 0)))) (not (and (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= (+ m a) (- 1))) (not (and (not (and (not (<= (+ m (* (- 1) a)) (- 2))) (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= (+ m a) (- 1))))) (not (and (not (and (<= (+ m (* (- 1) a)) (- 2)) (not (and (not (<= m (+ (- 1) a))) (not (<= (+ m a) (- 1))) (not (<= m 0)) (not (<= (+ m a) 0)))))) (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= (+ m a) (- 1))))) (<= (+ m (* (- 1) a)) (- 2)) (not (and (not (<= m (+ (- 1) a))) (not (<= (+ m a) (- 1))) (not (<= m 0)) (not (<= (+ m a) 0)))) (not (and (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= (+ m a) (- 1))) (not (and (not (and (not (and (<= (+ m (* (- 1) a)) (- 2)) (not (and (not (<= m (+ (- 1) a))) (not (<= (+ m a) (- 1))) (not (<= m 0)) (not (<= (+ m a) 0)))))) (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= (+ m a) (- 1))))) (<= (+ m (* (- 1) a)) (- 2)) (not (and (not (<= m (+ (- 1) a))) (not (<= (+ m a) (- 1))) (not (<= m 0)) (not (<= (+ m a) 0)))) (not (and (not (<= (+ m (* (- 1) a)) (- 2))) (not (<= (+ m a) 0)) (not (<= m 0)) (not (<= (+ m a) (- 1))))))))))))))))))))))))))))))))))
(define-fun B () Bool  (or (or (or (or (and (and (= a 0) (> m 0)) (= j 1)) (and (or (and (and (and (and (and (and (and (= |a'| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= u call0formal@u@@0)) u) (= a (+ |a'| 1))) (and (and (and (and (and (and (and (= |a'@@0| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= u call0formal@u@@0)) (not u)) (= a (- |a'@@0| 1)))) (= j (+ |j'| 1)))) (and (or (and (and (and (and (and (and (or (and (and (and (and (and (and (and (= |a'| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) |u'|) (= |a'@@1| (+ |a'| 1))) (and (and (and (and (and (and (and (= |a'@@0| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) (not |u'|)) (= |a'@@1| (- |a'@@0| 1)))) (= |j'@@0| (+ |j'| 1))) (<= |j'@@0| m)) (<= |j'@@0| m)) (= u call0formal@u@@0)) u) (= a (+ |a'@@1| 1))) (and (and (and (and (and (and (or (and (and (and (and (and (and (and (= |a'| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) |u'|) (= |a'@@2| (+ |a'| 1))) (and (and (and (and (and (and (and (= |a'@@0| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) (not |u'|)) (= |a'@@2| (- |a'@@0| 1)))) (= |j'@@0| (+ |j'| 1))) (<= |j'@@0| m)) (<= |j'@@0| m)) (= u call0formal@u@@0)) (not u)) (= a (- |a'@@2| 1)))) (= j (+ |j'@@0| 1)))) (and (or (and (and (and (and (and (and (or (and (and (and (and (and (and (or (and (and (and (and (and (and (and (= |a'| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) |u'|) (= |a'@@1| (+ |a'| 1))) (and (and (and (and (and (and (and (= |a'@@0| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) (not |u'|)) (= |a'@@1| (- |a'@@0| 1)))) (= |j'@@0| (+ |j'| 1))) (<= |j'@@0| m)) (<= |j'@@0| m)) (= |u'@@0| |call0formal@u'@@0|)) |u'@@0|) (= |a'@@3| (+ |a'@@1| 1))) (and (and (and (and (and (and (or (and (and (and (and (and (and (and (= |a'| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) |u'|) (= |a'@@2| (+ |a'| 1))) (and (and (and (and (and (and (and (= |a'@@0| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) (not |u'|)) (= |a'@@2| (- |a'@@0| 1)))) (= |j'@@0| (+ |j'| 1))) (<= |j'@@0| m)) (<= |j'@@0| m)) (= |u'@@0| |call0formal@u'@@0|)) (not |u'@@0|)) (= |a'@@3| (- |a'@@2| 1)))) (= |j'@@1| (+ |j'@@0| 1))) (<= |j'@@1| m)) (<= |j'@@1| m)) (= u call0formal@u@@0)) u) (= a (+ |a'@@3| 1))) (and (and (and (and (and (and (or (and (and (and (and (and (and (or (and (and (and (and (and (and (and (= |a'| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) |u'|) (= |a'@@1| (+ |a'| 1))) (and (and (and (and (and (and (and (= |a'@@0| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) (not |u'|)) (= |a'@@1| (- |a'@@0| 1)))) (= |j'@@0| (+ |j'| 1))) (<= |j'@@0| m)) (<= |j'@@0| m)) (= |u'@@0| |call0formal@u'@@0|)) |u'@@0|) (= |a'@@4| (+ |a'@@1| 1))) (and (and (and (and (and (and (or (and (and (and (and (and (and (and (= |a'| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) |u'|) (= |a'@@2| (+ |a'| 1))) (and (and (and (and (and (and (and (= |a'@@0| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) (not |u'|)) (= |a'@@2| (- |a'@@0| 1)))) (= |j'@@0| (+ |j'| 1))) (<= |j'@@0| m)) (<= |j'@@0| m)) (= |u'@@0| |call0formal@u'@@0|)) (not |u'@@0|)) (= |a'@@4| (- |a'@@2| 1)))) (= |j'@@1| (+ |j'@@0| 1))) (<= |j'@@1| m)) (<= |j'@@1| m)) (= u call0formal@u@@0)) (not u)) (= a (- |a'@@4| 1)))) (= j (+ |j'@@1| 1)))) (and (or (and (and (and (and (and (and (or (and (and (and (and (and (and (or (and (and (and (and (and (and (or (and (and (and (and (and (and (and (= |a'| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) |u'|) (= |a'@@1| (+ |a'| 1))) (and (and (and (and (and (and (and (= |a'@@0| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) (not |u'|)) (= |a'@@1| (- |a'@@0| 1)))) (= |j'@@0| (+ |j'| 1))) (<= |j'@@0| m)) (<= |j'@@0| m)) (= |u'@@0| |call0formal@u'@@0|)) |u'@@0|) (= |a'@@3| (+ |a'@@1| 1))) (and (and (and (and (and (and (or (and (and (and (and (and (and (and (= |a'| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) |u'|) (= |a'@@2| (+ |a'| 1))) (and (and (and (and (and (and (and (= |a'@@0| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) (not |u'|)) (= |a'@@2| (- |a'@@0| 1)))) (= |j'@@0| (+ |j'| 1))) (<= |j'@@0| m)) (<= |j'@@0| m)) (= |u'@@0| |call0formal@u'@@0|)) (not |u'@@0|)) (= |a'@@3| (- |a'@@2| 1)))) (= |j'@@1| (+ |j'@@0| 1))) (<= |j'@@1| m)) (<= |j'@@1| m)) (= |u'@@1| |call0formal@u'@@1|)) |u'@@1|) (= |a'@@5| (+ |a'@@3| 1))) (and (and (and (and (and (and (or (and (and (and (and (and (and (or (and (and (and (and (and (and (and (= |a'| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) |u'|) (= |a'@@1| (+ |a'| 1))) (and (and (and (and (and (and (and (= |a'@@0| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) (not |u'|)) (= |a'@@1| (- |a'@@0| 1)))) (= |j'@@0| (+ |j'| 1))) (<= |j'@@0| m)) (<= |j'@@0| m)) (= |u'@@0| |call0formal@u'@@0|)) |u'@@0|) (= |a'@@4| (+ |a'@@1| 1))) (and (and (and (and (and (and (or (and (and (and (and (and (and (and (= |a'| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) |u'|) (= |a'@@2| (+ |a'| 1))) (and (and (and (and (and (and (and (= |a'@@0| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) (not |u'|)) (= |a'@@2| (- |a'@@0| 1)))) (= |j'@@0| (+ |j'| 1))) (<= |j'@@0| m)) (<= |j'@@0| m)) (= |u'@@0| |call0formal@u'@@0|)) (not |u'@@0|)) (= |a'@@4| (- |a'@@2| 1)))) (= |j'@@1| (+ |j'@@0| 1))) (<= |j'@@1| m)) (<= |j'@@1| m)) (= |u'@@1| |call0formal@u'@@1|)) (not |u'@@1|)) (= |a'@@5| (- |a'@@4| 1)))) (= |j'@@2| (+ |j'@@1| 1))) (<= |j'@@2| m)) (<= |j'@@2| m)) (= u call0formal@u@@0)) u) (= a (+ |a'@@5| 1))) (and (and (and (and (and (and (or (and (and (and (and (and (and (or (and (and (and (and (and (and (or (and (and (and (and (and (and (and (= |a'| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) |u'|) (= |a'@@1| (+ |a'| 1))) (and (and (and (and (and (and (and (= |a'@@0| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) (not |u'|)) (= |a'@@1| (- |a'@@0| 1)))) (= |j'@@0| (+ |j'| 1))) (<= |j'@@0| m)) (<= |j'@@0| m)) (= |u'@@0| |call0formal@u'@@0|)) |u'@@0|) (= |a'@@3| (+ |a'@@1| 1))) (and (and (and (and (and (and (or (and (and (and (and (and (and (and (= |a'| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) |u'|) (= |a'@@2| (+ |a'| 1))) (and (and (and (and (and (and (and (= |a'@@0| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) (not |u'|)) (= |a'@@2| (- |a'@@0| 1)))) (= |j'@@0| (+ |j'| 1))) (<= |j'@@0| m)) (<= |j'@@0| m)) (= |u'@@0| |call0formal@u'@@0|)) (not |u'@@0|)) (= |a'@@3| (- |a'@@2| 1)))) (= |j'@@1| (+ |j'@@0| 1))) (<= |j'@@1| m)) (<= |j'@@1| m)) (= |u'@@1| |call0formal@u'@@1|)) |u'@@1|) (= |a'@@6| (+ |a'@@3| 1))) (and (and (and (and (and (and (or (and (and (and (and (and (and (or (and (and (and (and (and (and (and (= |a'| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) |u'|) (= |a'@@1| (+ |a'| 1))) (and (and (and (and (and (and (and (= |a'@@0| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) (not |u'|)) (= |a'@@1| (- |a'@@0| 1)))) (= |j'@@0| (+ |j'| 1))) (<= |j'@@0| m)) (<= |j'@@0| m)) (= |u'@@0| |call0formal@u'@@0|)) |u'@@0|) (= |a'@@4| (+ |a'@@1| 1))) (and (and (and (and (and (and (or (and (and (and (and (and (and (and (= |a'| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) |u'|) (= |a'@@2| (+ |a'| 1))) (and (and (and (and (and (and (and (= |a'@@0| 0) (> m 0)) (= |j'| 1)) (<= |j'| m)) (<= |j'| m)) (= |u'| |call0formal@u'|)) (not |u'|)) (= |a'@@2| (- |a'@@0| 1)))) (= |j'@@0| (+ |j'| 1))) (<= |j'@@0| m)) (<= |j'@@0| m)) (= |u'@@0| |call0formal@u'@@0|)) (not |u'@@0|)) (= |a'@@4| (- |a'@@2| 1)))) (= |j'@@1| (+ |j'@@0| 1))) (<= |j'@@1| m)) (<= |j'@@1| m)) (= |u'@@1| |call0formal@u'@@1|)) (not |u'@@1|)) (= |a'@@6| (- |a'@@4| 1)))) (= |j'@@2| (+ |j'@@1| 1))) (<= |j'@@2| m)) (<= |j'@@2| m)) (= u call0formal@u@@0)) (not u)) (= a (- |a'@@6| 1)))) (= j (+ |j'@@2| 1)))))
(assert (! A :interpolation-group g1))
(assert (! B :interpolation-group g2))
(check-sat)
(get-interpolant (g1))
(pop 1)
