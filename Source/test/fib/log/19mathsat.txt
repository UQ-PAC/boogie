(set-option :print-success false)
(set-info :smt-lib-version 2.6)
; done setting options


(declare-fun x () Int)
(declare-fun n () Int)
(declare-fun y () Int)
(declare-fun m () Int)
(push 1)
(define-fun A () Bool  (and (not (< x n)) (not (=> (<= n x) (= y n)))))
(define-fun B () Bool  (and (and (and (and (>= n 0) (>= m 0)) (< m n)) (= x 0)) (= y m)))
(assert (! A :interpolation-group g1))
(assert (! B :interpolation-group g2))
(check-sat)
(get-interpolant (g1))
(pop 1)
(declare-fun |x'| () Int)
(declare-fun |y'| () Int)
(push 1)
(define-fun A () Bool  (or (<= n x) (and (< x n) (=> (< x n) (and (=> (>= m (+ x 1)) (<= n (+ x 1))) (=> (> (+ x 1) m) (<= n (+ x 1))))))))
(define-fun B () Bool  (or (and (and (and (and (>= n 0) (>= m 0)) (< m n)) (= x 0)) (= y m)) (or (and (and (and (and (and (and (and (and (and (>= n 0) (>= m 0)) (< m n)) (= |x'| 0)) (= |y'| m)) (< |x'| n)) (< |x'| n)) (= x (+ |x'| 1))) (> x m)) (= y (+ |y'| 1))) (and (and (and (and (and (and (and (and (>= n 0) (>= m 0)) (< m n)) (= |x'| 0)) (= y m)) (< |x'| n)) (< |x'| n)) (= x (+ |x'| 1))) (>= m x)))))
(assert (! A :interpolation-group g1))
(assert (! B :interpolation-group g2))
(check-sat)
(pop 1)
(push 1)
(define-fun A () Bool  (or (and (not (< x n)) (not (=> (<= n x) (= y n)))) (and (< x n) (=> (< x n) (and (=> (>= m (+ x 1)) (and (not (< (+ x 1) n)) (not (=> (<= n (+ x 1)) (= y n))))) (=> (> (+ x 1) m) (and (not (< (+ x 1) n)) (not (=> (<= n (+ x 1)) (= (+ y 1) n))))))))))
(define-fun B () Bool  (or (and (and (and (and (>= n 0) (>= m 0)) (< m n)) (= x 0)) (= y m)) (or (and (and (and (and (and (and (and (and (and (>= n 0) (>= m 0)) (< m n)) (= |x'| 0)) (= |y'| m)) (< |x'| n)) (< |x'| n)) (= x (+ |x'| 1))) (> x m)) (= y (+ |y'| 1))) (and (and (and (and (and (and (and (and (>= n 0) (>= m 0)) (< m n)) (= |x'| 0)) (= y m)) (< |x'| n)) (< |x'| n)) (= x (+ |x'| 1))) (>= m x)))))
(assert (! A :interpolation-group g1))
(assert (! B :interpolation-group g2))
(check-sat)
(get-interpolant (g1))
(pop 1)
(declare-fun |x'@@0| () Int)
(declare-fun |y'@@0| () Int)
(push 1)
(define-fun A () Bool  (or (and (not (and (not (<= n x)) (and (not (<= n y)) (and (not (<= n x)) (and (not (<= 1 (+ x (* (- 0 1) y)))) (not (<= (+ y (* (- 0 1) m)) (- 0 1)))))))) (and (and (not (and (not (<= n x)) (and (not (<= n y)) (and (not (<= n x)) (and (not (<= 1 (+ x (* (- 0 1) y)))) (not (<= (+ y (* (- 0 1) m)) (- 0 1)))))))) (not (and (not (<= n y)) (and (not (<= n x)) (and (not (<= 1 (+ x (* (- 0 1) y)))) (not (<= (+ y (* (- 0 1) m)) (- 0 1)))))))) (not (and (and (not (<= n m)) (not (and (not (and (not (<= n x)) (and (not (<= n y)) (and (not (<= n x)) (and (not (<= 1 (+ x (* (- 0 1) y)))) (not (<= (+ y (* (- 0 1) m)) (- 0 1)))))))) (and (<= 1 (+ x (* (- 0 1) y))) (and (not (and (not (<= n x)) (and (not (<= n y)) (and (not (<= n x)) (and (not (<= 1 (+ x (* (- 0 1) y)))) (not (<= (+ y (* (- 0 1) m)) (- 0 1)))))))) (not (and (not (<= n y)) (and (not (<= n x)) (and (not (<= 1 (+ x (* (- 0 1) y)))) (not (<= (+ y (* (- 0 1) m)) (- 0 1)))))))))))) (and (not (and (not (and (not (<= n x)) (and (not (<= n y)) (and (not (<= n x)) (and (not (<= 1 (+ x (* (- 0 1) y)))) (not (<= (+ y (* (- 0 1) m)) (- 0 1)))))))) (and (<= 1 (+ x (* (- 0 1) y))) (and (not (and (not (<= n x)) (and (not (<= n y)) (and (not (<= n x)) (and (not (<= 1 (+ x (* (- 0 1) y)))) (not (<= (+ y (* (- 0 1) m)) (- 0 1)))))))) (not (and (not (<= n y)) (and (not (<= n x)) (and (not (<= 1 (+ x (* (- 0 1) y)))) (not (<= (+ y (* (- 0 1) m)) (- 0 1))))))))))) (and (not (<= (+ x (* (- 0 1) y)) (- 0 1))) (not (<= (+ n (* (- 0 1) y)) (- 0 1))))))))) (and (< x n) (=> (< x n) (and (=> (>= m (+ x 1)) (and (not (and (not (<= n (+ x 1))) (and (not (<= n y)) (and (not (<= n (+ x 1))) (and (not (<= 1 (+ (+ x 1) (* (- 0 1) y)))) (not (<= (+ y (* (- 0 1) m)) (- 0 1)))))))) (and (and (not (and (not (<= n (+ x 1))) (and (not (<= n y)) (and (not (<= n (+ x 1))) (and (not (<= 1 (+ (+ x 1) (* (- 0 1) y)))) (not (<= (+ y (* (- 0 1) m)) (- 0 1)))))))) (not (and (not (<= n y)) (and (not (<= n (+ x 1))) (and (not (<= 1 (+ (+ x 1) (* (- 0 1) y)))) (not (<= (+ y (* (- 0 1) m)) (- 0 1)))))))) (not (and (and (not (<= n m)) (not (and (not (and (not (<= n (+ x 1))) (and (not (<= n y)) (and (not (<= n (+ x 1))) (and (not (<= 1 (+ (+ x 1) (* (- 0 1) y)))) (not (<= (+ y (* (- 0 1) m)) (- 0 1)))))))) (and (<= 1 (+ (+ x 1) (* (- 0 1) y))) (and (not (and (not (<= n (+ x 1))) (and (not (<= n y)) (and (not (<= n (+ x 1))) (and (not (<= 1 (+ (+ x 1) (* (- 0 1) y)))) (not (<= (+ y (* (- 0 1) m)) (- 0 1)))))))) (not (and (not (<= n y)) (and (not (<= n (+ x 1))) (and (not (<= 1 (+ (+ x 1) (* (- 0 1) y)))) (not (<= (+ y (* (- 0 1) m)) (- 0 1)))))))))))) (and (not (and (not (and (not (<= n (+ x 1))) (and (not (<= n y)) (and (not (<= n (+ x 1))) (and (not (<= 1 (+ (+ x 1) (* (- 0 1) y)))) (not (<= (+ y (* (- 0 1) m)) (- 0 1)))))))) (and (<= 1 (+ (+ x 1) (* (- 0 1) y))) (and (not (and (not (<= n (+ x 1))) (and (not (<= n y)) (and (not (<= n (+ x 1))) (and (not (<= 1 (+ (+ x 1) (* (- 0 1) y)))) (not (<= (+ y (* (- 0 1) m)) (- 0 1)))))))) (not (and (not (<= n y)) (and (not (<= n (+ x 1))) (and (not (<= 1 (+ (+ x 1) (* (- 0 1) y)))) (not (<= (+ y (* (- 0 1) m)) (- 0 1))))))))))) (and (not (<= (+ (+ x 1) (* (- 0 1) y)) (- 0 1))) (not (<= (+ n (* (- 0 1) y)) (- 0 1)))))))))) (=> (> (+ x 1) m) (and (not (and (not (<= n (+ x 1))) (and (not (<= n (+ y 1))) (and (not (<= n (+ x 1))) (and (not (<= 1 (+ (+ x 1) (* (- 0 1) (+ y 1))))) (not (<= (+ (+ y 1) (* (- 0 1) m)) (- 0 1)))))))) (and (and (not (and (not (<= n (+ x 1))) (and (not (<= n (+ y 1))) (and (not (<= n (+ x 1))) (and (not (<= 1 (+ (+ x 1) (* (- 0 1) (+ y 1))))) (not (<= (+ (+ y 1) (* (- 0 1) m)) (- 0 1)))))))) (not (and (not (<= n (+ y 1))) (and (not (<= n (+ x 1))) (and (not (<= 1 (+ (+ x 1) (* (- 0 1) (+ y 1))))) (not (<= (+ (+ y 1) (* (- 0 1) m)) (- 0 1)))))))) (not (and (and (not (<= n m)) (not (and (not (and (not (<= n (+ x 1))) (and (not (<= n (+ y 1))) (and (not (<= n (+ x 1))) (and (not (<= 1 (+ (+ x 1) (* (- 0 1) (+ y 1))))) (not (<= (+ (+ y 1) (* (- 0 1) m)) (- 0 1)))))))) (and (<= 1 (+ (+ x 1) (* (- 0 1) (+ y 1)))) (and (not (and (not (<= n (+ x 1))) (and (not (<= n (+ y 1))) (and (not (<= n (+ x 1))) (and (not (<= 1 (+ (+ x 1) (* (- 0 1) (+ y 1))))) (not (<= (+ (+ y 1) (* (- 0 1) m)) (- 0 1)))))))) (not (and (not (<= n (+ y 1))) (and (not (<= n (+ x 1))) (and (not (<= 1 (+ (+ x 1) (* (- 0 1) (+ y 1))))) (not (<= (+ (+ y 1) (* (- 0 1) m)) (- 0 1)))))))))))) (and (not (and (not (and (not (<= n (+ x 1))) (and (not (<= n (+ y 1))) (and (not (<= n (+ x 1))) (and (not (<= 1 (+ (+ x 1) (* (- 0 1) (+ y 1))))) (not (<= (+ (+ y 1) (* (- 0 1) m)) (- 0 1)))))))) (and (<= 1 (+ (+ x 1) (* (- 0 1) (+ y 1)))) (and (not (and (not (<= n (+ x 1))) (and (not (<= n (+ y 1))) (and (not (<= n (+ x 1))) (and (not (<= 1 (+ (+ x 1) (* (- 0 1) (+ y 1))))) (not (<= (+ (+ y 1) (* (- 0 1) m)) (- 0 1)))))))) (not (and (not (<= n (+ y 1))) (and (not (<= n (+ x 1))) (and (not (<= 1 (+ (+ x 1) (* (- 0 1) (+ y 1))))) (not (<= (+ (+ y 1) (* (- 0 1) m)) (- 0 1))))))))))) (and (not (<= (+ (+ x 1) (* (- 0 1) (+ y 1))) (- 0 1))) (not (<= (+ n (* (- 0 1) (+ y 1))) (- 0 1)))))))))))))))
(define-fun B () Bool  (or (or (and (and (and (and (>= n 0) (>= m 0)) (< m n)) (= x 0)) (= y m)) (or (and (and (and (and (and (and (and (and (and (>= n 0) (>= m 0)) (< m n)) (= |x'| 0)) (= |y'| m)) (< |x'| n)) (< |x'| n)) (= x (+ |x'| 1))) (> x m)) (= y (+ |y'| 1))) (and (and (and (and (and (and (and (and (>= n 0) (>= m 0)) (< m n)) (= |x'| 0)) (= y m)) (< |x'| n)) (< |x'| n)) (= x (+ |x'| 1))) (>= m x)))) (or (and (and (and (and (and (or (and (and (and (and (and (and (and (and (and (>= n 0) (>= m 0)) (< m n)) (= |x'| 0)) (= |y'| m)) (< |x'| n)) (< |x'| n)) (= |x'@@0| (+ |x'| 1))) (> |x'@@0| m)) (= |y'@@0| (+ |y'| 1))) (and (and (and (and (and (and (and (and (>= n 0) (>= m 0)) (< m n)) (= |x'| 0)) (= |y'@@0| m)) (< |x'| n)) (< |x'| n)) (= |x'@@0| (+ |x'| 1))) (>= m |x'@@0|))) (< |x'@@0| n)) (< |x'@@0| n)) (= x (+ |x'@@0| 1))) (> x m)) (= y (+ |y'@@0| 1))) (and (and (and (and (or (and (and (and (and (and (and (and (and (and (>= n 0) (>= m 0)) (< m n)) (= |x'| 0)) (= |y'| m)) (< |x'| n)) (< |x'| n)) (= |x'@@0| (+ |x'| 1))) (> |x'@@0| m)) (= y (+ |y'| 1))) (and (and (and (and (and (and (and (and (>= n 0) (>= m 0)) (< m n)) (= |x'| 0)) (= y m)) (< |x'| n)) (< |x'| n)) (= |x'@@0| (+ |x'| 1))) (>= m |x'@@0|))) (< |x'@@0| n)) (< |x'@@0| n)) (= x (+ |x'@@0| 1))) (>= m x)))))
(assert (! A :interpolation-group g1))
(assert (! B :interpolation-group g2))
(check-sat)
(get-interpolant (g1))
(pop 1)
