(set-option :print-success false)
(set-info :smt-lib-version 2.6)
; done setting options


(declare-fun i () Int)
(declare-fun x () Int)
(declare-fun j () Int)
(push 1)
(assert (!  (and (not (< i x)) (not (and (<= x i) (= j (* 2 x))))) :interpolation-group g1))
(assert (!  (and (and (= j 0) (> x 0)) (= i 0)) :interpolation-group g2))
(check-sat)
(get-interpolant (g1))
(pop 1)
(declare-fun |j'| () Int)
(declare-fun |i'| () Int)
(push 1)
(assert (!  (or (<= x i) (and (< i x) (and (< i x) (<= x (+ i 1))))) :interpolation-group g1))
(assert (!  (or (and (and (= j 0) (> x 0)) (= i 0)) (and (and (and (and (and (and (= |j'| 0) (> x 0)) (= |i'| 0)) (< |i'| x)) (< |i'| x)) (= j (+ |j'| 2))) (= i (+ |i'| 1)))) :interpolation-group g2))
(check-sat)
(pop 1)
(push 1)
(assert (!  (or (and (not (< i x)) (not (and (<= x i) (= j (* 2 x))))) (and (< i x) (and (< i x) (and (not (< (+ i 1) x)) (not (and (<= x (+ i 1)) (= (+ j 2) (* 2 x)))))))) :interpolation-group g1))
(assert (!  (or (and (and (= j 0) (> x 0)) (= i 0)) (and (and (and (and (and (and (= |j'| 0) (> x 0)) (= |i'| 0)) (< |i'| x)) (< |i'| x)) (= j (+ |j'| 2))) (= i (+ |i'| 1)))) :interpolation-group g2))
(check-sat)
(get-interpolant (g1))
(pop 1)
