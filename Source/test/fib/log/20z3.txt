(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun j () Int)
(declare-fun n () Int)
(declare-fun x () Int)
(declare-fun y () Int)
(declare-fun k () Int)
(declare-fun m () Int)
(declare-fun i () Int)
(push 1)
(set-info :boogie-vc-id |invariant inference check|)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (and (and (not (not (and (not (<= m (- 0 1))) (and (= (+ x (+ y (* (- 0 1) k))) 0) (not (<= 1 j)))))) (< j n)) (< j n)) (and (=> (not (= j i)) (forall ((call0formal@u Bool) )  (and (=> (not call0formal@u) (not (not (and (not (<= m (- 0 1))) (and (= (+ (- x 1) (+ (+ y 1) (* (- 0 1) k))) 0) (not (<= 1 (+ j 1)))))))) (=> call0formal@u (not (not (and (not (<= j (- 0 1))) (and (= (+ (- x 1) (+ (+ y 1) (* (- 0 1) k))) 0) (not (<= 1 (+ j 1))))))))))) (=> (= j i) (forall ((call0formal@u@@0 Bool) )  (and (=> (not call0formal@u@@0) (not (not (and (not (<= m (- 0 1))) (and (= (+ (+ x 1) (+ (- y 1) (* (- 0 1) k))) 0) (not (<= 1 (+ j 1)))))))) (=> call0formal@u@@0 (not (not (and (not (<= j (- 0 1))) (and (= (+ (+ x 1) (+ (- y 1) (* (- 0 1) k))) 0) (not (<= 1 (+ j 1)))))))))))))
))
(check-sat)
(pop 1)
(push 1)
(assert  (or (not (and (not (<= m (- 0 1))) (and (= (+ x (+ y (* (- 0 1) k))) 0) (not (<= 1 j))))) (and (< j n) (=> (< j n) (and (=> (not (= j i)) (forall ((call0formal@u@@1 Bool) )  (and (=> (not call0formal@u@@1) (not (and (not (<= m (- 0 1))) (and (= (+ (- x 1) (+ (+ y 1) (* (- 0 1) k))) 0) (not (<= 1 (+ j 1))))))) (=> call0formal@u@@1 (not (and (not (<= j (- 0 1))) (and (= (+ (- x 1) (+ (+ y 1) (* (- 0 1) k))) 0) (not (<= 1 (+ j 1)))))))))) (=> (= j i) (forall ((call0formal@u@@2 Bool) )  (and (=> (not call0formal@u@@2) (not (and (not (<= m (- 0 1))) (and (= (+ (+ x 1) (+ (- y 1) (* (- 0 1) k))) 0) (not (<= 1 (+ j 1))))))) (=> call0formal@u@@2 (not (and (not (<= j (- 0 1))) (and (= (+ (+ x 1) (+ (- y 1) (* (- 0 1) k))) 0) (not (<= 1 (+ j 1)))))))))))))))
(apply (then ctx-solver-simplify qe))
(pop 1)
(declare-fun |x'| () Int)
(declare-fun |y'| () Int)
(declare-fun |m'| () Int)
(declare-fun |j'| () Int)
(declare-fun |x'@@0| () Int)
(declare-fun |y'@@0| () Int)
(declare-fun u () Bool)
(declare-fun call0formal@u@@3 () Bool)
(push 1)
(assert  (or (and (not (< j n)) (not (=> (<= n j) (and (= (+ x y) k) (and (or (<= n 0) (<= 0 m)) (or (<= n 0) (<= m n))))))) (and (< j n) (=> (< j n) (and (=> (not (= j i)) (forall ((call0formal@u@@4 Bool) )  (and (=> (not call0formal@u@@4) (and (not (< (+ j 1) n)) (not (=> (<= n (+ j 1)) (and (= (+ (- x 1) (+ y 1)) k) (and (or (<= n 0) (<= 0 m)) (or (<= n 0) (<= m n)))))))) (=> call0formal@u@@4 (and (not (< (+ j 1) n)) (not (=> (<= n (+ j 1)) (and (= (+ (- x 1) (+ y 1)) k) (and (or (<= n 0) (<= 0 j)) (or (<= n 0) (<= j n))))))))))) (=> (= j i) (forall ((call0formal@u@@5 Bool) )  (and (=> (not call0formal@u@@5) (and (not (< (+ j 1) n)) (not (=> (<= n (+ j 1)) (and (= (+ (+ x 1) (- y 1)) k) (and (or (<= n 0) (<= 0 m)) (or (<= n 0) (<= m n)))))))) (=> call0formal@u@@5 (and (not (< (+ j 1) n)) (not (=> (<= n (+ j 1)) (and (= (+ (+ x 1) (- y 1)) k) (and (or (<= n 0) (<= 0 j)) (or (<= n 0) (<= j n))))))))))))))))
(apply (then ctx-solver-simplify qe))
(pop 1)
(push 1)
(set-info :boogie-vc-id |invariant inference check|)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (and (and (not (not (and (not (<= m (- 0 1))) (and (not (<= 2 m)) (not (and (not (= (+ x (+ y (* (- 0 1) k))) 0)) (and (not (and (not (<= m (- 0 1))) (and (= (+ x (+ y (* (- 0 1) k))) 0) (not (<= 2 m))))) (not (and (not (<= m (- 0 1))) (and (not (<= 2 m)) (or (= (+ x (+ y (* (- 0 1) k))) 0) (and (not (<= m (- 0 1))) (and (= (+ x (+ y (* (- 0 1) k))) 0) (not (<= 2 m))))))))))))))) (< j n)) (< j n)) (and (=> (not (= j i)) (forall ((call0formal@u@@6 Bool) )  (and (=> (not call0formal@u@@6) (not (not (and (not (<= m (- 0 1))) (and (not (<= 2 m)) (not (and (not (= (+ (- x 1) (+ (+ y 1) (* (- 0 1) k))) 0)) (and (not (and (not (<= m (- 0 1))) (and (= (+ (- x 1) (+ (+ y 1) (* (- 0 1) k))) 0) (not (<= 2 m))))) (not (and (not (<= m (- 0 1))) (and (not (<= 2 m)) (or (= (+ (- x 1) (+ (+ y 1) (* (- 0 1) k))) 0) (and (not (<= m (- 0 1))) (and (= (+ (- x 1) (+ (+ y 1) (* (- 0 1) k))) 0) (not (<= 2 m)))))))))))))))) (=> call0formal@u@@6 (not (not (and (not (<= j (- 0 1))) (and (not (<= 2 j)) (not (and (not (= (+ (- x 1) (+ (+ y 1) (* (- 0 1) k))) 0)) (and (not (and (not (<= j (- 0 1))) (and (= (+ (- x 1) (+ (+ y 1) (* (- 0 1) k))) 0) (not (<= 2 j))))) (not (and (not (<= j (- 0 1))) (and (not (<= 2 j)) (or (= (+ (- x 1) (+ (+ y 1) (* (- 0 1) k))) 0) (and (not (<= j (- 0 1))) (and (= (+ (- x 1) (+ (+ y 1) (* (- 0 1) k))) 0) (not (<= 2 j))))))))))))))))))) (=> (= j i) (forall ((call0formal@u@@7 Bool) )  (and (=> (not call0formal@u@@7) (not (not (and (not (<= m (- 0 1))) (and (not (<= 2 m)) (not (and (not (= (+ (+ x 1) (+ (- y 1) (* (- 0 1) k))) 0)) (and (not (and (not (<= m (- 0 1))) (and (= (+ (+ x 1) (+ (- y 1) (* (- 0 1) k))) 0) (not (<= 2 m))))) (not (and (not (<= m (- 0 1))) (and (not (<= 2 m)) (or (= (+ (+ x 1) (+ (- y 1) (* (- 0 1) k))) 0) (and (not (<= m (- 0 1))) (and (= (+ (+ x 1) (+ (- y 1) (* (- 0 1) k))) 0) (not (<= 2 m)))))))))))))))) (=> call0formal@u@@7 (not (not (and (not (<= j (- 0 1))) (and (not (<= 2 j)) (not (and (not (= (+ (+ x 1) (+ (- y 1) (* (- 0 1) k))) 0)) (and (not (and (not (<= j (- 0 1))) (and (= (+ (+ x 1) (+ (- y 1) (* (- 0 1) k))) 0) (not (<= 2 j))))) (not (and (not (<= j (- 0 1))) (and (not (<= 2 j)) (or (= (+ (+ x 1) (+ (- y 1) (* (- 0 1) k))) 0) (and (not (<= j (- 0 1))) (and (= (+ (+ x 1) (+ (- y 1) (* (- 0 1) k))) 0) (not (<= 2 j)))))))))))))))))))))
))
(check-sat)
(pop 1)
(push 1)
(assert  (or (not (and (not (<= m (- 0 1))) (and (not (<= 2 m)) (not (and (not (= (+ x (+ y (* (- 0 1) k))) 0)) (and (not (and (not (<= m (- 0 1))) (and (= (+ x (+ y (* (- 0 1) k))) 0) (not (<= 2 m))))) (not (and (not (<= m (- 0 1))) (and (not (<= 2 m)) (or (= (+ x (+ y (* (- 0 1) k))) 0) (and (not (<= m (- 0 1))) (and (= (+ x (+ y (* (- 0 1) k))) 0) (not (<= 2 m)))))))))))))) (and (< j n) (=> (< j n) (and (=> (not (= j i)) (forall ((call0formal@u@@8 Bool) )  (and (=> (not call0formal@u@@8) (not (and (not (<= m (- 0 1))) (and (not (<= 2 m)) (not (and (not (= (+ (- x 1) (+ (+ y 1) (* (- 0 1) k))) 0)) (and (not (and (not (<= m (- 0 1))) (and (= (+ (- x 1) (+ (+ y 1) (* (- 0 1) k))) 0) (not (<= 2 m))))) (not (and (not (<= m (- 0 1))) (and (not (<= 2 m)) (or (= (+ (- x 1) (+ (+ y 1) (* (- 0 1) k))) 0) (and (not (<= m (- 0 1))) (and (= (+ (- x 1) (+ (+ y 1) (* (- 0 1) k))) 0) (not (<= 2 m))))))))))))))) (=> call0formal@u@@8 (not (and (not (<= j (- 0 1))) (and (not (<= 2 j)) (not (and (not (= (+ (- x 1) (+ (+ y 1) (* (- 0 1) k))) 0)) (and (not (and (not (<= j (- 0 1))) (and (= (+ (- x 1) (+ (+ y 1) (* (- 0 1) k))) 0) (not (<= 2 j))))) (not (and (not (<= j (- 0 1))) (and (not (<= 2 j)) (or (= (+ (- x 1) (+ (+ y 1) (* (- 0 1) k))) 0) (and (not (<= j (- 0 1))) (and (= (+ (- x 1) (+ (+ y 1) (* (- 0 1) k))) 0) (not (<= 2 j)))))))))))))))))) (=> (= j i) (forall ((call0formal@u@@9 Bool) )  (and (=> (not call0formal@u@@9) (not (and (not (<= m (- 0 1))) (and (not (<= 2 m)) (not (and (not (= (+ (+ x 1) (+ (- y 1) (* (- 0 1) k))) 0)) (and (not (and (not (<= m (- 0 1))) (and (= (+ (+ x 1) (+ (- y 1) (* (- 0 1) k))) 0) (not (<= 2 m))))) (not (and (not (<= m (- 0 1))) (and (not (<= 2 m)) (or (= (+ (+ x 1) (+ (- y 1) (* (- 0 1) k))) 0) (and (not (<= m (- 0 1))) (and (= (+ (+ x 1) (+ (- y 1) (* (- 0 1) k))) 0) (not (<= 2 m))))))))))))))) (=> call0formal@u@@9 (not (and (not (<= j (- 0 1))) (and (not (<= 2 j)) (not (and (not (= (+ (+ x 1) (+ (- y 1) (* (- 0 1) k))) 0)) (and (not (and (not (<= j (- 0 1))) (and (= (+ (+ x 1) (+ (- y 1) (* (- 0 1) k))) 0) (not (<= 2 j))))) (not (and (not (<= j (- 0 1))) (and (not (<= 2 j)) (or (= (+ (+ x 1) (+ (- y 1) (* (- 0 1) k))) 0) (and (not (<= j (- 0 1))) (and (= (+ (+ x 1) (+ (- y 1) (* (- 0 1) k))) 0) (not (<= 2 j)))))))))))))))))))))))
(apply (then ctx-solver-simplify qe))
(pop 1)
(declare-fun |x'@@1| () Int)
(declare-fun |y'@@1| () Int)
(declare-fun |u'| () Bool)
(declare-fun |call0formal@u'| () Bool)
(declare-fun |m'@@0| () Int)
(declare-fun |j'@@0| () Int)
(declare-fun |x'@@2| () Int)
(declare-fun |y'@@2| () Int)
(push 1)
(set-info :boogie-vc-id |invariant inference check|)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (and (and (not (and (not (and (= (+ x (+ y (* (- 0 1) k))) 0) (and (not (<= m (- 0 1))) (not (<= 2 m))))) (not (and (= (+ x (+ y (* (- 0 1) k))) 0) (not (and (or (<= m (- 0 1)) (<= 2 m)) (not (and (= (+ x (+ y (* (- 0 1) k))) 0) (and (not (<= m (- 0 1))) (not (<= 2 m))))))))))) (< j n)) (< j n)) (and (=> (not (= j i)) (forall ((call0formal@u@@10 Bool) )  (and (=> (not call0formal@u@@10) (not (and (not (and (= (+ (- x 1) (+ (+ y 1) (* (- 0 1) k))) 0) (and (not (<= m (- 0 1))) (not (<= 2 m))))) (not (and (= (+ (- x 1) (+ (+ y 1) (* (- 0 1) k))) 0) (not (and (or (<= m (- 0 1)) (<= 2 m)) (not (and (= (+ (- x 1) (+ (+ y 1) (* (- 0 1) k))) 0) (and (not (<= m (- 0 1))) (not (<= 2 m)))))))))))) (=> call0formal@u@@10 (not (and (not (and (= (+ (- x 1) (+ (+ y 1) (* (- 0 1) k))) 0) (and (not (<= j (- 0 1))) (not (<= 2 j))))) (not (and (= (+ (- x 1) (+ (+ y 1) (* (- 0 1) k))) 0) (not (and (or (<= j (- 0 1)) (<= 2 j)) (not (and (= (+ (- x 1) (+ (+ y 1) (* (- 0 1) k))) 0) (and (not (<= j (- 0 1))) (not (<= 2 j))))))))))))))) (=> (= j i) (forall ((call0formal@u@@11 Bool) )  (and (=> (not call0formal@u@@11) (not (and (not (and (= (+ (+ x 1) (+ (- y 1) (* (- 0 1) k))) 0) (and (not (<= m (- 0 1))) (not (<= 2 m))))) (not (and (= (+ (+ x 1) (+ (- y 1) (* (- 0 1) k))) 0) (not (and (or (<= m (- 0 1)) (<= 2 m)) (not (and (= (+ (+ x 1) (+ (- y 1) (* (- 0 1) k))) 0) (and (not (<= m (- 0 1))) (not (<= 2 m)))))))))))) (=> call0formal@u@@11 (not (and (not (and (= (+ (+ x 1) (+ (- y 1) (* (- 0 1) k))) 0) (and (not (<= j (- 0 1))) (not (<= 2 j))))) (not (and (= (+ (+ x 1) (+ (- y 1) (* (- 0 1) k))) 0) (not (and (or (<= j (- 0 1)) (<= 2 j)) (not (and (= (+ (+ x 1) (+ (- y 1) (* (- 0 1) k))) 0) (and (not (<= j (- 0 1))) (not (<= 2 j)))))))))))))))))
))
(check-sat)
(pop 1)
(push 1)
(assert  (or (and (not (and (= (+ x (+ y (* (- 0 1) k))) 0) (and (not (<= m (- 0 1))) (not (<= 2 m))))) (not (and (= (+ x (+ y (* (- 0 1) k))) 0) (not (and (or (<= m (- 0 1)) (<= 2 m)) (not (and (= (+ x (+ y (* (- 0 1) k))) 0) (and (not (<= m (- 0 1))) (not (<= 2 m)))))))))) (and (< j n) (=> (< j n) (and (=> (not (= j i)) (forall ((call0formal@u@@12 Bool) )  (and (=> (not call0formal@u@@12) (and (not (and (= (+ (- x 1) (+ (+ y 1) (* (- 0 1) k))) 0) (and (not (<= m (- 0 1))) (not (<= 2 m))))) (not (and (= (+ (- x 1) (+ (+ y 1) (* (- 0 1) k))) 0) (not (and (or (<= m (- 0 1)) (<= 2 m)) (not (and (= (+ (- x 1) (+ (+ y 1) (* (- 0 1) k))) 0) (and (not (<= m (- 0 1))) (not (<= 2 m))))))))))) (=> call0formal@u@@12 (and (not (and (= (+ (- x 1) (+ (+ y 1) (* (- 0 1) k))) 0) (and (not (<= j (- 0 1))) (not (<= 2 j))))) (not (and (= (+ (- x 1) (+ (+ y 1) (* (- 0 1) k))) 0) (not (and (or (<= j (- 0 1)) (<= 2 j)) (not (and (= (+ (- x 1) (+ (+ y 1) (* (- 0 1) k))) 0) (and (not (<= j (- 0 1))) (not (<= 2 j)))))))))))))) (=> (= j i) (forall ((call0formal@u@@13 Bool) )  (and (=> (not call0formal@u@@13) (and (not (and (= (+ (+ x 1) (+ (- y 1) (* (- 0 1) k))) 0) (and (not (<= m (- 0 1))) (not (<= 2 m))))) (not (and (= (+ (+ x 1) (+ (- y 1) (* (- 0 1) k))) 0) (not (and (or (<= m (- 0 1)) (<= 2 m)) (not (and (= (+ (+ x 1) (+ (- y 1) (* (- 0 1) k))) 0) (and (not (<= m (- 0 1))) (not (<= 2 m))))))))))) (=> call0formal@u@@13 (and (not (and (= (+ (+ x 1) (+ (- y 1) (* (- 0 1) k))) 0) (and (not (<= j (- 0 1))) (not (<= 2 j))))) (not (and (= (+ (+ x 1) (+ (- y 1) (* (- 0 1) k))) 0) (not (and (or (<= j (- 0 1)) (<= 2 j)) (not (and (= (+ (+ x 1) (+ (- y 1) (* (- 0 1) k))) 0) (and (not (<= j (- 0 1))) (not (<= 2 j)))))))))))))))))))
(apply (then ctx-solver-simplify qe))
(pop 1)
(declare-fun |x'@@3| () Int)
(declare-fun |y'@@3| () Int)
(declare-fun |u'@@0| () Bool)
(declare-fun |call0formal@u'@@0| () Bool)
(declare-fun |m'@@1| () Int)
(declare-fun |j'@@1| () Int)
(declare-fun |x'@@4| () Int)
(declare-fun |y'@@4| () Int)
(push 1)
(assert  (or (and (not (< j n)) (not (=> (<= n j) (and (= (+ x y) k) (and (or (<= n 0) (<= 0 m)) (or (<= n 0) (<= m n))))))) (and (< j n) (=> (< j n) (and (=> (not (= j i)) (forall ((call0formal@u@@14 Bool) )  (and (=> (not call0formal@u@@14) (or (and (not (< (+ j 1) n)) (not (=> (<= n (+ j 1)) (and (= (+ (- x 1) (+ y 1)) k) (and (or (<= n 0) (<= 0 m)) (or (<= n 0) (<= m n))))))) (and (< (+ j 1) n) (=> (< (+ j 1) n) (and (=> (not (= (+ j 1) i)) (forall ((call0formal@u@@15 Bool) )  (and (=> (not call0formal@u@@15) (and (not (< (+ (+ j 1) 1) n)) (not (=> (<= n (+ (+ j 1) 1)) (and (= (+ (- (- x 1) 1) (+ (+ y 1) 1)) k) (and (or (<= n 0) (<= 0 m)) (or (<= n 0) (<= m n)))))))) (=> call0formal@u@@15 (and (not (< (+ (+ j 1) 1) n)) (not (=> (<= n (+ (+ j 1) 1)) (and (= (+ (- (- x 1) 1) (+ (+ y 1) 1)) k) (and (or (<= n 0) (<= 0 (+ j 1))) (or (<= n 0) (<= (+ j 1) n))))))))))) (=> (= (+ j 1) i) (forall ((call0formal@u@@16 Bool) )  (and (=> (not call0formal@u@@16) (and (not (< (+ (+ j 1) 1) n)) (not (=> (<= n (+ (+ j 1) 1)) (and (= (+ (+ (- x 1) 1) (- (+ y 1) 1)) k) (and (or (<= n 0) (<= 0 m)) (or (<= n 0) (<= m n)))))))) (=> call0formal@u@@16 (and (not (< (+ (+ j 1) 1) n)) (not (=> (<= n (+ (+ j 1) 1)) (and (= (+ (+ (- x 1) 1) (- (+ y 1) 1)) k) (and (or (<= n 0) (<= 0 (+ j 1))) (or (<= n 0) (<= (+ j 1) n)))))))))))))))) (=> call0formal@u@@14 (or (and (not (< (+ j 1) n)) (not (=> (<= n (+ j 1)) (and (= (+ (- x 1) (+ y 1)) k) (and (or (<= n 0) (<= 0 j)) (or (<= n 0) (<= j n))))))) (and (< (+ j 1) n) (=> (< (+ j 1) n) (and (=> (not (= (+ j 1) i)) (forall ((call0formal@u@@17 Bool) )  (and (=> (not call0formal@u@@17) (and (not (< (+ (+ j 1) 1) n)) (not (=> (<= n (+ (+ j 1) 1)) (and (= (+ (- (- x 1) 1) (+ (+ y 1) 1)) k) (and (or (<= n 0) (<= 0 j)) (or (<= n 0) (<= j n)))))))) (=> call0formal@u@@17 (and (not (< (+ (+ j 1) 1) n)) (not (=> (<= n (+ (+ j 1) 1)) (and (= (+ (- (- x 1) 1) (+ (+ y 1) 1)) k) (and (or (<= n 0) (<= 0 (+ j 1))) (or (<= n 0) (<= (+ j 1) n))))))))))) (=> (= (+ j 1) i) (forall ((call0formal@u@@18 Bool) )  (and (=> (not call0formal@u@@18) (and (not (< (+ (+ j 1) 1) n)) (not (=> (<= n (+ (+ j 1) 1)) (and (= (+ (+ (- x 1) 1) (- (+ y 1) 1)) k) (and (or (<= n 0) (<= 0 j)) (or (<= n 0) (<= j n)))))))) (=> call0formal@u@@18 (and (not (< (+ (+ j 1) 1) n)) (not (=> (<= n (+ (+ j 1) 1)) (and (= (+ (+ (- x 1) 1) (- (+ y 1) 1)) k) (and (or (<= n 0) (<= 0 (+ j 1))) (or (<= n 0) (<= (+ j 1) n))))))))))))))))))) (=> (= j i) (forall ((call0formal@u@@19 Bool) )  (and (=> (not call0formal@u@@19) (or (and (not (< (+ j 1) n)) (not (=> (<= n (+ j 1)) (and (= (+ (+ x 1) (- y 1)) k) (and (or (<= n 0) (<= 0 m)) (or (<= n 0) (<= m n))))))) (and (< (+ j 1) n) (=> (< (+ j 1) n) (and (=> (not (= (+ j 1) i)) (forall ((call0formal@u@@20 Bool) )  (and (=> (not call0formal@u@@20) (and (not (< (+ (+ j 1) 1) n)) (not (=> (<= n (+ (+ j 1) 1)) (and (= (+ (- (+ x 1) 1) (+ (- y 1) 1)) k) (and (or (<= n 0) (<= 0 m)) (or (<= n 0) (<= m n)))))))) (=> call0formal@u@@20 (and (not (< (+ (+ j 1) 1) n)) (not (=> (<= n (+ (+ j 1) 1)) (and (= (+ (- (+ x 1) 1) (+ (- y 1) 1)) k) (and (or (<= n 0) (<= 0 (+ j 1))) (or (<= n 0) (<= (+ j 1) n))))))))))) (=> (= (+ j 1) i) (forall ((call0formal@u@@21 Bool) )  (and (=> (not call0formal@u@@21) (and (not (< (+ (+ j 1) 1) n)) (not (=> (<= n (+ (+ j 1) 1)) (and (= (+ (+ (+ x 1) 1) (- (- y 1) 1)) k) (and (or (<= n 0) (<= 0 m)) (or (<= n 0) (<= m n)))))))) (=> call0formal@u@@21 (and (not (< (+ (+ j 1) 1) n)) (not (=> (<= n (+ (+ j 1) 1)) (and (= (+ (+ (+ x 1) 1) (- (- y 1) 1)) k) (and (or (<= n 0) (<= 0 (+ j 1))) (or (<= n 0) (<= (+ j 1) n)))))))))))))))) (=> call0formal@u@@19 (or (and (not (< (+ j 1) n)) (not (=> (<= n (+ j 1)) (and (= (+ (+ x 1) (- y 1)) k) (and (or (<= n 0) (<= 0 j)) (or (<= n 0) (<= j n))))))) (and (< (+ j 1) n) (=> (< (+ j 1) n) (and (=> (not (= (+ j 1) i)) (forall ((call0formal@u@@22 Bool) )  (and (=> (not call0formal@u@@22) (and (not (< (+ (+ j 1) 1) n)) (not (=> (<= n (+ (+ j 1) 1)) (and (= (+ (- (+ x 1) 1) (+ (- y 1) 1)) k) (and (or (<= n 0) (<= 0 j)) (or (<= n 0) (<= j n)))))))) (=> call0formal@u@@22 (and (not (< (+ (+ j 1) 1) n)) (not (=> (<= n (+ (+ j 1) 1)) (and (= (+ (- (+ x 1) 1) (+ (- y 1) 1)) k) (and (or (<= n 0) (<= 0 (+ j 1))) (or (<= n 0) (<= (+ j 1) n))))))))))) (=> (= (+ j 1) i) (forall ((call0formal@u@@23 Bool) )  (and (=> (not call0formal@u@@23) (and (not (< (+ (+ j 1) 1) n)) (not (=> (<= n (+ (+ j 1) 1)) (and (= (+ (+ (+ x 1) 1) (- (- y 1) 1)) k) (and (or (<= n 0) (<= 0 j)) (or (<= n 0) (<= j n)))))))) (=> call0formal@u@@23 (and (not (< (+ (+ j 1) 1) n)) (not (=> (<= n (+ (+ j 1) 1)) (and (= (+ (+ (+ x 1) 1) (- (- y 1) 1)) k) (and (or (<= n 0) (<= 0 (+ j 1))) (or (<= n 0) (<= (+ j 1) n))))))))))))))))))))))))
(apply (then ctx-solver-simplify qe))
(pop 1)
