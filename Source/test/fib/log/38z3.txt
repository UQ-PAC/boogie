(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun i () Int)
(declare-fun n () Int)
(declare-fun x () Int)
(declare-fun y () Int)
(push 1)
(set-info :boogie-vc-id |invariant inference check|)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (and (and (not (or (<= 1 (+ x (* (- 0 2) y))) (<= (+ x (* (- 0 2) y)) (- 0 1)))) (< i n)) (< i n)) (or (=> (not (= (mod (+ i 1) 2) 0)) (not (or (<= 1 (+ (+ x 1) (* (- 0 2) y))) (<= (+ (+ x 1) (* (- 0 2) y)) (- 0 1))))) (=> (= (mod (+ i 1) 2) 0) (not (or (<= 1 (+ (+ x 1) (* (- 0 2) (+ y 1)))) (<= (+ (+ x 1) (* (- 0 2) (+ y 1))) (- 0 1)))))))
))
(check-sat)
(pop 1)
(push 1)
(set-info :boogie-vc-id |invariant inference check|)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (and (and (not (or (<= 1 (+ x (* (- 0 2) y))) (<= (+ x (* (- 0 2) y)) (- 0 1)))) (not (< i n))) (<= n i)) (or (not (= (mod i 2) 0)) (= x (* 2 y))))
))
(check-sat)
(pop 1)
(push 1)
(set-info :boogie-vc-id |invariant inference check|)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (and (and (= i 0) (= x 0)) (= y 0)) (not (or (<= 1 (+ x (* (- 0 2) y))) (<= (+ x (* (- 0 2) y)) (- 0 1)))))
))
(check-sat)
(pop 1)
(push 1)
(set-info :boogie-vc-id |invariant inference check|)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (not (and (not (or (<= 1 (+ x (* (- 0 2) y))) (<= (+ x (* (- 0 2) y)) (- 0 1)))) (not (< i n))))
))
(check-sat)
(pop 1)
