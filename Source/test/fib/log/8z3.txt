(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun u () Bool)
(declare-fun x () Int)
(declare-fun y () Int)
(declare-fun call0formal@u () Bool)
(push 1)
(set-info :boogie-vc-id |invariant inference check|)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (and (and (not (<= 4 x)) u) u) (forall ((call0formal@u@@0 Bool) )  (or (=> (not call0formal@u@@0) (forall ((call0formal@u@@1 Bool) )  (or (=> (not call0formal@u@@1) (forall ((call0formal@u@@2 Bool) )  (not (<= 4 x)))) (=> call0formal@u@@1 (or (=> (> 4 x) (or (=> (<= 0 x) (forall ((call0formal@u@@3 Bool) )  (not (<= 4 x)))) (=> (< x 0) (forall ((call0formal@u@@4 Bool) )  (not (<= 4 x)))))) (=> (>= x 4) (or (=> (<= 0 (+ x 1)) (forall ((call0formal@u@@5 Bool) )  (not (<= 4 (+ x 1))))) (=> (< (+ x 1) 0) (forall ((call0formal@u@@6 Bool) )  (not (<= 4 (+ x 1)))))))))))) (=> call0formal@u@@0 (forall ((call0formal@u@@7 Bool) )  (not (<= 4 (+ x 1))))))))
))
(check-sat)
(pop 1)
(push 1)
(set-info :boogie-vc-id |invariant inference check|)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (and (and (not (<= 4 x)) (not u)) (not u)) (or (< x 4) (> y 2)))
))
(check-sat)
(pop 1)
(push 1)
(set-info :boogie-vc-id |invariant inference check|)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (and (and (= x 0) (= y 0)) (= u call0formal@u)) (not (<= 4 x)))
))
(check-sat)
(pop 1)
(push 1)
(set-info :boogie-vc-id |invariant inference check|)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (not (and (not (<= 4 x)) (not u)))
))
(check-sat)
(pop 1)
