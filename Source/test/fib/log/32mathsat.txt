(set-option :print-success false)
(set-info :smt-lib-version 2.6)
; done setting options


(declare-fun n () Int)
(declare-fun k () Int)
(declare-fun i () Int)
(declare-fun j () Int)
(declare-fun b () Int)
(push 1)
(define-fun A () Bool  (and (not (< n (* 2 k))) (not (=> (<= (* 2 k) n) (= i j)))))
(define-fun B () Bool  (and (and (and (> k 0) (= i j)) (= n 0)) (or (= b 1) (= b 0))))
(assert (! A :interpolation-group g1))
(assert (! B :interpolation-group g2))
(check-sat)
(get-interpolant (g1))
(pop 1)
(declare-fun |i'| () Int)
(declare-fun |n'| () Int)
(declare-fun |b'| () Int)
(declare-fun |j'| () Int)
(declare-fun |b'@@0| () Int)
(push 1)
(define-fun A () Bool  (or (not (= i j)) (and (< n (* 2 k)) (=> (< n (* 2 k)) (and (=> (not (= b 1)) (not (= i (+ j 1)))) (=> (= b 1) (not (= (+ i 1) j))))))))
(define-fun B () Bool  (or (and (and (and (> k 0) (= i j)) (= n 0)) (or (= b 1) (= b 0))) (and (or (and (and (and (and (and (and (and (and (> k 0) (= |i'| j)) (= |n'| 0)) (or (= |b'| 1) (= |b'| 0))) (< |n'| (* 2 k))) (< |n'| (* 2 k))) (= |b'| 1)) (= i (+ |i'| 1))) (= b 0)) (and (and (and (and (and (and (and (and (> k 0) (= i |j'|)) (= |n'| 0)) (or (= |b'@@0| 1) (= |b'@@0| 0))) (< |n'| (* 2 k))) (< |n'| (* 2 k))) (not (= |b'@@0| 1))) (= j (+ |j'| 1))) (= b 1))) (= n (+ |n'| 1)))))
(assert (! A :interpolation-group g1))
(assert (! B :interpolation-group g2))
(check-sat)
(pop 1)
(push 1)
(define-fun A () Bool  (or (and (not (< n (* 2 k))) (not (=> (<= (* 2 k) n) (= i j)))) (and (< n (* 2 k)) (=> (< n (* 2 k)) (and (=> (not (= b 1)) (and (not (< (+ n 1) (* 2 k))) (not (=> (<= (* 2 k) (+ n 1)) (= i (+ j 1)))))) (=> (= b 1) (and (not (< (+ n 1) (* 2 k))) (not (=> (<= (* 2 k) (+ n 1)) (= (+ i 1) j))))))))))
(define-fun B () Bool  (or (and (and (and (> k 0) (= i j)) (= n 0)) (or (= b 1) (= b 0))) (and (or (and (and (and (and (and (and (and (and (> k 0) (= |i'| j)) (= |n'| 0)) (or (= |b'| 1) (= |b'| 0))) (< |n'| (* 2 k))) (< |n'| (* 2 k))) (= |b'| 1)) (= i (+ |i'| 1))) (= b 0)) (and (and (and (and (and (and (and (and (> k 0) (= i |j'|)) (= |n'| 0)) (or (= |b'@@0| 1) (= |b'@@0| 0))) (< |n'| (* 2 k))) (< |n'| (* 2 k))) (not (= |b'@@0| 1))) (= j (+ |j'| 1))) (= b 1))) (= n (+ |n'| 1)))))
(assert (! A :interpolation-group g1))
(assert (! B :interpolation-group g2))
(check-sat)
(get-interpolant (g1))
(pop 1)
(declare-fun |i'@@0| () Int)
(declare-fun |b'@@1| () Int)
(declare-fun |n'@@0| () Int)
(declare-fun |j'@@0| () Int)
(declare-fun |b'@@2| () Int)
(push 1)
(define-fun A () Bool  (or (or (and (<= 0 (+ n (* (- 0 2) k))) (not (= i j))) (and (not (and (and (not (= b 1)) (= 1 (+ i (* (- 0 1) j)))) (not (and (<= 0 (+ n (* (- 0 2) k))) (not (= i j)))))) (and (<= (- 0 1) (+ n (* (- 0 2) k))) (not (and (not (and (<= 0 (+ n (* (- 0 2) k))) (not (= i j)))) (and (= b 1) (and (not (<= j i)) (not (<= (+ i (* (- 0 1) j)) (- 0 2)))))))))) (and (< n (* 2 k)) (=> (< n (* 2 k)) (and (=> (not (= b 1)) (or (and (<= 0 (+ (+ n 1) (* (- 0 2) k))) (not (= i (+ j 1)))) (and (not (and (and (not (= 1 1)) (= 1 (+ i (* (- 0 1) (+ j 1))))) (not (and (<= 0 (+ (+ n 1) (* (- 0 2) k))) (not (= i (+ j 1))))))) (and (<= (- 0 1) (+ (+ n 1) (* (- 0 2) k))) (not (and (not (and (<= 0 (+ (+ n 1) (* (- 0 2) k))) (not (= i (+ j 1))))) (and (= 1 1) (and (not (<= (+ j 1) i)) (not (<= (+ i (* (- 0 1) (+ j 1))) (- 0 2))))))))))) (=> (= b 1) (or (and (<= 0 (+ (+ n 1) (* (- 0 2) k))) (not (= (+ i 1) j))) (and (not (and (and (not (= 0 1)) (= 1 (+ (+ i 1) (* (- 0 1) j)))) (not (and (<= 0 (+ (+ n 1) (* (- 0 2) k))) (not (= (+ i 1) j)))))) (and (<= (- 0 1) (+ (+ n 1) (* (- 0 2) k))) (not (and (not (and (<= 0 (+ (+ n 1) (* (- 0 2) k))) (not (= (+ i 1) j)))) (and (= 0 1) (and (not (<= j (+ i 1))) (not (<= (+ (+ i 1) (* (- 0 1) j)) (- 0 2))))))))))))))))
(define-fun B () Bool  (or (or (and (and (and (> k 0) (= i j)) (= n 0)) (or (= b 1) (= b 0))) (and (or (and (and (and (and (and (and (and (and (> k 0) (= |i'| j)) (= |n'| 0)) (or (= |b'| 1) (= |b'| 0))) (< |n'| (* 2 k))) (< |n'| (* 2 k))) (= |b'| 1)) (= i (+ |i'| 1))) (= b 0)) (and (and (and (and (and (and (and (and (> k 0) (= i |j'|)) (= |n'| 0)) (or (= |b'@@0| 1) (= |b'@@0| 0))) (< |n'| (* 2 k))) (< |n'| (* 2 k))) (not (= |b'@@0| 1))) (= j (+ |j'| 1))) (= b 1))) (= n (+ |n'| 1)))) (and (or (and (and (and (and (and (and (or (and (and (and (and (and (and (and (and (> k 0) (= |i'| j)) (= |n'| 0)) (or (= |b'| 1) (= |b'| 0))) (< |n'| (* 2 k))) (< |n'| (* 2 k))) (= |b'| 1)) (= |i'@@0| (+ |i'| 1))) (= |b'@@1| 0)) (and (and (and (and (and (and (and (and (> k 0) (= |i'@@0| |j'|)) (= |n'| 0)) (or (= |b'@@0| 1) (= |b'@@0| 0))) (< |n'| (* 2 k))) (< |n'| (* 2 k))) (not (= |b'@@0| 1))) (= j (+ |j'| 1))) (= |b'@@1| 1))) (= |n'@@0| (+ |n'| 1))) (< |n'@@0| (* 2 k))) (< |n'@@0| (* 2 k))) (= |b'@@1| 1)) (= i (+ |i'@@0| 1))) (= b 0)) (and (and (and (and (and (and (or (and (and (and (and (and (and (and (and (> k 0) (= |i'| |j'@@0|)) (= |n'| 0)) (or (= |b'| 1) (= |b'| 0))) (< |n'| (* 2 k))) (< |n'| (* 2 k))) (= |b'| 1)) (= i (+ |i'| 1))) (= |b'@@2| 0)) (and (and (and (and (and (and (and (and (> k 0) (= i |j'|)) (= |n'| 0)) (or (= |b'@@0| 1) (= |b'@@0| 0))) (< |n'| (* 2 k))) (< |n'| (* 2 k))) (not (= |b'@@0| 1))) (= |j'@@0| (+ |j'| 1))) (= |b'@@2| 1))) (= |n'@@0| (+ |n'| 1))) (< |n'@@0| (* 2 k))) (< |n'@@0| (* 2 k))) (not (= |b'@@2| 1))) (= j (+ |j'@@0| 1))) (= b 1))) (= n (+ |n'@@0| 1)))))
(assert (! A :interpolation-group g1))
(assert (! B :interpolation-group g2))
(check-sat)
(pop 1)
