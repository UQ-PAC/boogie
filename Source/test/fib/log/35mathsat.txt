(set-option :print-success false)
(set-info :smt-lib-version 2.6)
; done setting options


(declare-fun x () Int)
(declare-fun n () Int)
(push 1)
(define-fun A () Bool  (and (not (< x n)) (not (=> (<= n x) (= x n)))))
(define-fun B () Bool  (and (> n 0) (= x 0)))
(assert (! A :interpolation-group g1))
(assert (! B :interpolation-group g2))
(check-sat)
(get-interpolant (g1))
(pop 1)
(declare-fun |x'| () Int)
(push 1)
(define-fun A () Bool  (or (<= n x) (and (< x n) (=> (< x n) (<= n (+ x 1))))))
(define-fun B () Bool  (or (and (> n 0) (= x 0)) (and (and (and (and (> n 0) (= |x'| 0)) (< |x'| n)) (< |x'| n)) (= x (+ |x'| 1)))))
(assert (! A :interpolation-group g1))
(assert (! B :interpolation-group g2))
(check-sat)
(pop 1)
(push 1)
(define-fun A () Bool  (or (and (not (< x n)) (not (=> (<= n x) (= x n)))) (and (< x n) (=> (< x n) (and (not (< (+ x 1) n)) (not (=> (<= n (+ x 1)) (= (+ x 1) n))))))))
(define-fun B () Bool  (or (and (> n 0) (= x 0)) (and (and (and (and (> n 0) (= |x'| 0)) (< |x'| n)) (< |x'| n)) (= x (+ |x'| 1)))))
(assert (! A :interpolation-group g1))
(assert (! B :interpolation-group g2))
(check-sat)
(get-interpolant (g1))
(pop 1)
