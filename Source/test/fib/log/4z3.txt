(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun x () Int)
(declare-fun y () Int)
(push 1)
(set-info :boogie-vc-id |invariant inference check|)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (and (and (not (<= 0 x)) (< x 0)) (< x 0)) (not (<= 0 (+ x y))))
))
(check-sat)
(pop 1)
(declare-fun |x'| () Int)
(declare-fun |y'| () Int)
(push 1)
(set-info :boogie-vc-id |invariant inference check|)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (and (and (not (or (and (<= 1 x) (<= 2 (+ x (* (- 0 1) y)))) (and (or (<= 0 x) (and (<= 1 x) (<= 2 (+ x (* (- 0 1) y))))) (<= y x)))) (< x 0)) (< x 0)) (not (or (and (<= 1 (+ x y)) (<= 2 (+ (+ x y) (* (- 0 1) (+ y 1))))) (and (or (<= 0 (+ x y)) (and (<= 1 (+ x y)) (<= 2 (+ (+ x y) (* (- 0 1) (+ y 1)))))) (<= (+ y 1) (+ x y))))))
))
(check-sat)
(pop 1)
(push 1)
(set-info :boogie-vc-id |invariant inference check|)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (and (and (not (or (and (<= 1 x) (<= 2 (+ x (* (- 0 1) y)))) (and (or (<= 0 x) (and (<= 1 x) (<= 2 (+ x (* (- 0 1) y))))) (<= y x)))) (not (< x 0))) (<= 0 x)) (> y 0))
))
(check-sat)
(pop 1)
(push 1)
(set-info :boogie-vc-id |invariant inference check|)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= x (- 0 50)) (not (or (and (<= 1 x) (<= 2 (+ x (* (- 0 1) y)))) (and (or (<= 0 x) (and (<= 1 x) (<= 2 (+ x (* (- 0 1) y))))) (<= y x)))))
))
(check-sat)
(pop 1)
(push 1)
(set-info :boogie-vc-id |invariant inference check|)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (not (and (not (or (and (<= 1 x) (<= 2 (+ x (* (- 0 1) y)))) (and (or (<= 0 x) (and (<= 1 x) (<= 2 (+ x (* (- 0 1) y))))) (<= y x)))) (not (< x 0))))
))
(check-sat)
(pop 1)
