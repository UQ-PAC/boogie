(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun i () Int)
(declare-fun x () Int)
(declare-fun j () Int)
(declare-fun |i'| () Int)
(declare-fun |j'| () Int)
(push 1)
(set-info :boogie-vc-id |invariant inference check|)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (and (and (and (and (not (<= x |i'|)) (< |i'| x)) (< |i'| x)) (= j (+ |j'| 2))) (= i (+ |i'| 1))) (not (<= x i)))
))
(check-sat)
(pop 1)
(declare-fun |j'@@0| () Int)
(declare-fun |i'@@0| () Int)
(declare-fun |i'@@1| () Int)
(declare-fun |j'@@1| () Int)
(push 1)
(set-info :boogie-vc-id |invariant inference check|)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (and (and (and (and (not (and (not (and (not (and (<= x |i'@@1|) (or (<= 1 (+ (* 2 |i'@@1|) (* (- 0 1) |j'@@1|))) (<= (+ (* 2 x) (* (- 0 1) |j'@@1|)) (- 0 1))))) (and (and (not (<= 1 (+ (* 2 |i'@@1|) (* (- 0 1) |j'@@1|)))) (not (and (<= x |i'@@1|) (or (<= 1 (+ (* 2 |i'@@1|) (* (- 0 1) |j'@@1|))) (<= (+ (* 2 x) (* (- 0 1) |j'@@1|)) (- 0 1)))))) (not (<= (+ (* 2 |i'@@1|) (* (- 0 1) |j'@@1|)) (- 0 1)))))) (not (and (not (and (<= x |i'@@1|) (or (<= 1 (+ (* 2 |i'@@1|) (* (- 0 1) |j'@@1|))) (<= (+ (* 2 x) (* (- 0 1) |j'@@1|)) (- 0 1))))) (and (not (<= 1 (+ (* 2 |i'@@1|) (* (- 0 1) |j'@@1|)))) (and (not (and (<= x |i'@@1|) (or (<= 1 (+ (* 2 |i'@@1|) (* (- 0 1) |j'@@1|))) (<= (+ (* 2 x) (* (- 0 1) |j'@@1|)) (- 0 1))))) (not (<= (+ (* 2 |i'@@1|) (* (- 0 1) |j'@@1|)) (- 0 1))))))))) (< |i'@@1| x)) (< |i'@@1| x)) (= j (+ |j'@@1| 2))) (= i (+ |i'@@1| 1))) (not (and (not (and (not (and (<= x i) (or (<= 1 (+ (* 2 i) (* (- 0 1) j))) (<= (+ (* 2 x) (* (- 0 1) j)) (- 0 1))))) (and (and (not (<= 1 (+ (* 2 i) (* (- 0 1) j)))) (not (and (<= x i) (or (<= 1 (+ (* 2 i) (* (- 0 1) j))) (<= (+ (* 2 x) (* (- 0 1) j)) (- 0 1)))))) (not (<= (+ (* 2 i) (* (- 0 1) j)) (- 0 1)))))) (not (and (not (and (<= x i) (or (<= 1 (+ (* 2 i) (* (- 0 1) j))) (<= (+ (* 2 x) (* (- 0 1) j)) (- 0 1))))) (and (not (<= 1 (+ (* 2 i) (* (- 0 1) j)))) (and (not (and (<= x i) (or (<= 1 (+ (* 2 i) (* (- 0 1) j))) (<= (+ (* 2 x) (* (- 0 1) j)) (- 0 1))))) (not (<= (+ (* 2 i) (* (- 0 1) j)) (- 0 1))))))))))
))
(check-sat)
(pop 1)
(push 1)
(set-info :boogie-vc-id |invariant inference check|)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (and (and (not (and (not (and (not (and (<= x i) (or (<= 1 (+ (* 2 i) (* (- 0 1) j))) (<= (+ (* 2 x) (* (- 0 1) j)) (- 0 1))))) (and (and (not (<= 1 (+ (* 2 i) (* (- 0 1) j)))) (not (and (<= x i) (or (<= 1 (+ (* 2 i) (* (- 0 1) j))) (<= (+ (* 2 x) (* (- 0 1) j)) (- 0 1)))))) (not (<= (+ (* 2 i) (* (- 0 1) j)) (- 0 1)))))) (not (and (not (and (<= x i) (or (<= 1 (+ (* 2 i) (* (- 0 1) j))) (<= (+ (* 2 x) (* (- 0 1) j)) (- 0 1))))) (and (not (<= 1 (+ (* 2 i) (* (- 0 1) j)))) (and (not (and (<= x i) (or (<= 1 (+ (* 2 i) (* (- 0 1) j))) (<= (+ (* 2 x) (* (- 0 1) j)) (- 0 1))))) (not (<= (+ (* 2 i) (* (- 0 1) j)) (- 0 1))))))))) (not (< i x))) (<= x i)) (= j (* 2 x)))
))
(check-sat)
(pop 1)
(push 1)
(set-info :boogie-vc-id |invariant inference check|)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (and (and (= j 0) (> x 0)) (= i 0)) (not (and (not (and (not (and (<= x i) (or (<= 1 (+ (* 2 i) (* (- 0 1) j))) (<= (+ (* 2 x) (* (- 0 1) j)) (- 0 1))))) (and (and (not (<= 1 (+ (* 2 i) (* (- 0 1) j)))) (not (and (<= x i) (or (<= 1 (+ (* 2 i) (* (- 0 1) j))) (<= (+ (* 2 x) (* (- 0 1) j)) (- 0 1)))))) (not (<= (+ (* 2 i) (* (- 0 1) j)) (- 0 1)))))) (not (and (not (and (<= x i) (or (<= 1 (+ (* 2 i) (* (- 0 1) j))) (<= (+ (* 2 x) (* (- 0 1) j)) (- 0 1))))) (and (not (<= 1 (+ (* 2 i) (* (- 0 1) j)))) (and (not (and (<= x i) (or (<= 1 (+ (* 2 i) (* (- 0 1) j))) (<= (+ (* 2 x) (* (- 0 1) j)) (- 0 1))))) (not (<= (+ (* 2 i) (* (- 0 1) j)) (- 0 1))))))))))
))
(check-sat)
(pop 1)
(push 1)
(set-info :boogie-vc-id |invariant inference check|)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (not (and (not (and (not (and (not (and (<= x i) (or (<= 1 (+ (* 2 i) (* (- 0 1) j))) (<= (+ (* 2 x) (* (- 0 1) j)) (- 0 1))))) (and (and (not (<= 1 (+ (* 2 i) (* (- 0 1) j)))) (not (and (<= x i) (or (<= 1 (+ (* 2 i) (* (- 0 1) j))) (<= (+ (* 2 x) (* (- 0 1) j)) (- 0 1)))))) (not (<= (+ (* 2 i) (* (- 0 1) j)) (- 0 1)))))) (not (and (not (and (<= x i) (or (<= 1 (+ (* 2 i) (* (- 0 1) j))) (<= (+ (* 2 x) (* (- 0 1) j)) (- 0 1))))) (and (not (<= 1 (+ (* 2 i) (* (- 0 1) j)))) (and (not (and (<= x i) (or (<= 1 (+ (* 2 i) (* (- 0 1) j))) (<= (+ (* 2 x) (* (- 0 1) j)) (- 0 1))))) (not (<= (+ (* 2 i) (* (- 0 1) j)) (- 0 1))))))))) (not (< i x))))
))
(check-sat)
(pop 1)
