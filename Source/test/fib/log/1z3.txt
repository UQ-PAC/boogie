(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun u () Bool)
(declare-fun y () Int)
(declare-fun x () Int)
(push 1)
(set-info :boogie-vc-id |invariant inference check|)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (and (and (not (<= y 0)) u) u) (not (<= (+ x y) 0)))
))
(check-sat)
(pop 1)
(declare-fun |x'| () Int)
(declare-fun |y'| () Int)
(declare-fun t1 () Int)
(declare-fun t2 () Int)
(push 1)
(set-info :boogie-vc-id |invariant inference check|)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (and (and (not (or (<= y 0) (and u (and (<= (+ y x) 0) (or (<= y 0) (and u (<= x (- 0 1)))))))) u) u) (not (or (<= (+ x y) 0) (and u (and (<= (+ (+ x y) (+ x y)) 0) (or (<= (+ x y) 0) (and u (<= (+ x y) (- 0 1)))))))))
))
(check-sat)
(pop 1)
(push 1)
(set-info :boogie-vc-id |invariant inference check|)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (not (and (not (or (<= y 0) (and u (and (<= (+ y x) 0) (or (<= y 0) (and u (<= x (- 0 1)))))))) (not u)))
))
(check-sat)
(pop 1)
