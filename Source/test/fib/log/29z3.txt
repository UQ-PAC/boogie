(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun u () Bool)
(declare-fun a () Int)
(declare-fun c () Int)
(declare-fun b () Int)
(declare-fun d () Int)
(declare-fun x () Int)
(declare-fun y () Int)
(declare-fun turn () Int)
(declare-fun call0formal@u () Bool)
(push 1)
(set-info :boogie-vc-id |invariant inference check|)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (and (and (not (or (<= 1 (+ a (+ c (+ (* (- 0 1) b) (* (- 0 1) d))))) (<= (+ a (+ c (+ (* (- 0 1) b) (* (- 0 1) d)))) (- 0 1)))) u) u) (or (=> (not (= turn 0)) (or (=> (not (= turn 1)) (forall ((call0formal@u@@0 Bool) )  (not (or (<= 1 (+ a (+ c (+ (* (- 0 1) b) (* (- 0 1) d))))) (<= (+ a (+ c (+ (* (- 0 1) b) (* (- 0 1) d)))) (- 0 1)))))) (=> (= turn 1) (forall ((call0formal@u@@1 Bool) )  (or (=> (not call0formal@u@@1) (forall ((call0formal@u@@2 Bool) )  (not (or (<= 1 (+ a (+ (- c 1) (+ (* (- 0 1) (- b 1)) (* (- 0 1) d))))) (<= (+ a (+ (- c 1) (+ (* (- 0 1) (- b 1)) (* (- 0 1) d)))) (- 0 1)))))) (=> call0formal@u@@1 (forall ((call0formal@u@@3 Bool) )  (not (or (<= 1 (+ a (+ (- c 1) (+ (* (- 0 1) (- b 1)) (* (- 0 1) d))))) (<= (+ a (+ (- c 1) (+ (* (- 0 1) (- b 1)) (* (- 0 1) d)))) (- 0 1))))))))))) (=> (= turn 0) (or (=> (not (= (mod (+ (+ a c) (+ b d)) 2) 0)) (forall ((call0formal@u@@4 Bool) )  (not (or (<= 1 (+ (- a 1) (+ c (+ (* (- 0 1) b) (* (- 0 1) d))))) (<= (+ (- a 1) (+ c (+ (* (- 0 1) b) (* (- 0 1) d)))) (- 0 1)))))) (=> (= (mod (+ (+ a c) (+ b d)) 2) 0) (forall ((call0formal@u@@5 Bool) )  (not (or (<= 1 (+ (+ a 1) (+ c (+ (* (- 0 1) b) (* (- 0 1) (+ d 1)))))) (<= (+ (+ a 1) (+ c (+ (* (- 0 1) b) (* (- 0 1) (+ d 1))))) (- 0 1))))))))))
))
(check-sat)
(pop 1)
