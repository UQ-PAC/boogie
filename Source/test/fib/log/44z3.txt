(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun i () Int)
(declare-fun k () Int)
(declare-fun n () Int)
(declare-fun j () Int)
(push 1)
(set-info :boogie-vc-id |invariant inference check|)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (and (and (not (not (= i j))) (<= i k)) (<= i k)) (not (not (= (+ i 1) (+ j n)))))
))
(check-sat)
(pop 1)
(declare-fun |i'| () Int)
(declare-fun |j'| () Int)
(push 1)
(set-info :boogie-vc-id |invariant inference check|)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (and (and (not (or (and (= n 1) (and (not (= i j)) (or (<= 1 (+ i (* (- 0 1) j))) (<= (+ i (* (- 0 1) j)) (- 0 1))))) (and (= n 1) (and (or (<= 0 (+ i (+ (* (- 0 1) n) (* (- 0 1) j)))) (<= (+ i (+ (* (- 0 1) n) (* (- 0 1) j))) (- 0 2))) (or (and (= n 1) (and (not (= i j)) (or (<= 1 (+ i (* (- 0 1) j))) (<= (+ i (* (- 0 1) j)) (- 0 1))))) (and (= n 1) (or (<= 0 (+ i (+ (* (- 0 1) n) (* (- 0 1) j)))) (<= (+ i (+ (* (- 0 1) n) (* (- 0 1) j))) (- 0 2))))))))) (<= i k)) (<= i k)) (not (or (and (= n 1) (and (not (= (+ i 1) (+ j n))) (or (<= 1 (+ (+ i 1) (* (- 0 1) (+ j n)))) (<= (+ (+ i 1) (* (- 0 1) (+ j n))) (- 0 1))))) (and (= n 1) (and (or (<= 0 (+ (+ i 1) (+ (* (- 0 1) n) (* (- 0 1) (+ j n))))) (<= (+ (+ i 1) (+ (* (- 0 1) n) (* (- 0 1) (+ j n)))) (- 0 2))) (or (and (= n 1) (and (not (= (+ i 1) (+ j n))) (or (<= 1 (+ (+ i 1) (* (- 0 1) (+ j n)))) (<= (+ (+ i 1) (* (- 0 1) (+ j n))) (- 0 1))))) (and (= n 1) (or (<= 0 (+ (+ i 1) (+ (* (- 0 1) n) (* (- 0 1) (+ j n))))) (<= (+ (+ i 1) (+ (* (- 0 1) n) (* (- 0 1) (+ j n)))) (- 0 2))))))))))
))
(check-sat)
(pop 1)
(push 1)
(set-info :boogie-vc-id |invariant inference check|)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (and (and (not (or (and (= n 1) (and (not (= i j)) (or (<= 1 (+ i (* (- 0 1) j))) (<= (+ i (* (- 0 1) j)) (- 0 1))))) (and (= n 1) (and (or (<= 0 (+ i (+ (* (- 0 1) n) (* (- 0 1) j)))) (<= (+ i (+ (* (- 0 1) n) (* (- 0 1) j))) (- 0 2))) (or (and (= n 1) (and (not (= i j)) (or (<= 1 (+ i (* (- 0 1) j))) (<= (+ i (* (- 0 1) j)) (- 0 1))))) (and (= n 1) (or (<= 0 (+ i (+ (* (- 0 1) n) (* (- 0 1) j)))) (<= (+ i (+ (* (- 0 1) n) (* (- 0 1) j))) (- 0 2))))))))) (not (<= i k))) (< k i)) (or (not (= n 1)) (= i j)))
))
(check-sat)
(pop 1)
(push 1)
(set-info :boogie-vc-id |invariant inference check|)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (and (and (or (= n 1) (= n 2)) (= i 0)) (= j 0)) (not (or (and (= n 1) (and (not (= i j)) (or (<= 1 (+ i (* (- 0 1) j))) (<= (+ i (* (- 0 1) j)) (- 0 1))))) (and (= n 1) (and (or (<= 0 (+ i (+ (* (- 0 1) n) (* (- 0 1) j)))) (<= (+ i (+ (* (- 0 1) n) (* (- 0 1) j))) (- 0 2))) (or (and (= n 1) (and (not (= i j)) (or (<= 1 (+ i (* (- 0 1) j))) (<= (+ i (* (- 0 1) j)) (- 0 1))))) (and (= n 1) (or (<= 0 (+ i (+ (* (- 0 1) n) (* (- 0 1) j)))) (<= (+ i (+ (* (- 0 1) n) (* (- 0 1) j))) (- 0 2))))))))))
))
(check-sat)
(pop 1)
(push 1)
(set-info :boogie-vc-id |invariant inference check|)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (not (and (not (or (and (= n 1) (and (not (= i j)) (or (<= 1 (+ i (* (- 0 1) j))) (<= (+ i (* (- 0 1) j)) (- 0 1))))) (and (= n 1) (and (or (<= 0 (+ i (+ (* (- 0 1) n) (* (- 0 1) j)))) (<= (+ i (+ (* (- 0 1) n) (* (- 0 1) j))) (- 0 2))) (or (and (= n 1) (and (not (= i j)) (or (<= 1 (+ i (* (- 0 1) j))) (<= (+ i (* (- 0 1) j)) (- 0 1))))) (and (= n 1) (or (<= 0 (+ i (+ (* (- 0 1) n) (* (- 0 1) j)))) (<= (+ i (+ (* (- 0 1) n) (* (- 0 1) j))) (- 0 2))))))))) (not (<= i k))))
))
(check-sat)
(pop 1)
