(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun j () Int)
(declare-fun n () Int)
(declare-fun k () Int)
(push 1)
(set-info :boogie-vc-id |invariant inference check|)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (and (and (not (<= n j)) (< j n)) (< j n)) (not (<= n (+ j 1))))
))
(check-sat)
(pop 1)
(declare-fun |k'| () Int)
(declare-fun |j'| () Int)
(push 1)
(set-info :boogie-vc-id |invariant inference check|)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (and (and (not (or (and (<= n j) (<= k (- 0 1))) (and (or (and (<= n j) (<= k (- 0 1))) (<= (+ j (+ (* (- 0 1) n) k)) (- 0 1))) (<= k 0)))) (< j n)) (< j n)) (not (or (and (<= n (+ j 1)) (<= (- k 1) (- 0 1))) (and (or (and (<= n (+ j 1)) (<= (- k 1) (- 0 1))) (<= (+ (+ j 1) (+ (* (- 0 1) n) (- k 1))) (- 0 1))) (<= (- k 1) 0)))))
))
(check-sat)
(pop 1)
(declare-fun |j'@@0| () Int)
(declare-fun |k'@@0| () Int)
(push 1)
(set-info :boogie-vc-id |invariant inference check|)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (and (and (not (not (and (and (not (and (<= (+ j (+ (* (- 0 1) n) k)) (- 0 1)) (or (<= k 0) (<= k 1)))) (not (and (<= (+ j (+ (* (- 0 1) n) k)) (- 0 1)) (<= k 0)))) (not (and (not (and (not (<= k 0)) (and (not (and (<= (+ j (+ (* (- 0 1) n) k)) (- 0 1)) (or (<= k 0) (<= k 1)))) (not (and (<= (+ j (+ (* (- 0 1) n) k)) (- 0 1)) (<= k 0)))))) (or (<= (+ j (+ (* (- 0 1) n) k)) (- 0 1)) (and (<= 1 (+ j (* (- 0 1) n))) (not (and (and (not (and (<= (+ j (+ (* (- 0 1) n) k)) (- 0 1)) (or (<= k 0) (<= k 1)))) (not (and (<= (+ j (+ (* (- 0 1) n) k)) (- 0 1)) (<= k 0)))) (not (and (<= k (- 0 1)) (not (and (not (<= k 0)) (and (not (and (<= (+ j (+ (* (- 0 1) n) k)) (- 0 1)) (or (<= k 0) (<= k 1)))) (not (and (<= (+ j (+ (* (- 0 1) n) k)) (- 0 1)) (<= k 0))))))))))))))))) (< j n)) (< j n)) (not (not (and (and (not (and (<= (+ (+ j 1) (+ (* (- 0 1) n) (- k 1))) (- 0 1)) (or (<= (- k 1) 0) (<= (- k 1) 1)))) (not (and (<= (+ (+ j 1) (+ (* (- 0 1) n) (- k 1))) (- 0 1)) (<= (- k 1) 0)))) (not (and (not (and (not (<= (- k 1) 0)) (and (not (and (<= (+ (+ j 1) (+ (* (- 0 1) n) (- k 1))) (- 0 1)) (or (<= (- k 1) 0) (<= (- k 1) 1)))) (not (and (<= (+ (+ j 1) (+ (* (- 0 1) n) (- k 1))) (- 0 1)) (<= (- k 1) 0)))))) (or (<= (+ (+ j 1) (+ (* (- 0 1) n) (- k 1))) (- 0 1)) (and (<= 1 (+ (+ j 1) (* (- 0 1) n))) (not (and (and (not (and (<= (+ (+ j 1) (+ (* (- 0 1) n) (- k 1))) (- 0 1)) (or (<= (- k 1) 0) (<= (- k 1) 1)))) (not (and (<= (+ (+ j 1) (+ (* (- 0 1) n) (- k 1))) (- 0 1)) (<= (- k 1) 0)))) (not (and (<= (- k 1) (- 0 1)) (not (and (not (<= (- k 1) 0)) (and (not (and (<= (+ (+ j 1) (+ (* (- 0 1) n) (- k 1))) (- 0 1)) (or (<= (- k 1) 0) (<= (- k 1) 1)))) (not (and (<= (+ (+ j 1) (+ (* (- 0 1) n) (- k 1))) (- 0 1)) (<= (- k 1) 0))))))))))))))))))
))
(check-sat)
(pop 1)
(declare-fun |j'@@1| () Int)
(declare-fun |k'@@1| () Int)
(push 1)
(set-info :boogie-vc-id |invariant inference check|)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (and (and (not (or (<= (+ j (+ (* (- 0 1) n) k)) (- 0 1)) (and (or (<= k (- 0 1)) (<= (+ j (+ (* (- 0 1) n) k)) (- 0 1))) (and (or (<= (+ j (+ (* (- 0 1) n) k)) (- 0 1)) (and (<= 1 (+ j (* (- 0 1) n))) (or (<= k (- 0 1)) (<= (+ j (+ (* (- 0 1) n) k)) (- 0 1))))) (and (<= 1 (+ j (* (- 0 1) n))) (or (<= (+ j (+ (* (- 0 1) n) k)) (- 0 1)) (and (or (<= k (- 0 1)) (<= (+ j (+ (* (- 0 1) n) k)) (- 0 1))) (and (<= 1 (+ j (* (- 0 1) n))) (or (<= (+ j (+ (* (- 0 1) n) k)) (- 0 1)) (and (<= 1 (+ j (* (- 0 1) n))) (or (<= k (- 0 1)) (<= (+ j (+ (* (- 0 1) n) k)) (- 0 1))))))))))))) (< j n)) (< j n)) (not (or (<= (+ (+ j 1) (+ (* (- 0 1) n) (- k 1))) (- 0 1)) (and (or (<= (- k 1) (- 0 1)) (<= (+ (+ j 1) (+ (* (- 0 1) n) (- k 1))) (- 0 1))) (and (or (<= (+ (+ j 1) (+ (* (- 0 1) n) (- k 1))) (- 0 1)) (and (<= 1 (+ (+ j 1) (* (- 0 1) n))) (or (<= (- k 1) (- 0 1)) (<= (+ (+ j 1) (+ (* (- 0 1) n) (- k 1))) (- 0 1))))) (and (<= 1 (+ (+ j 1) (* (- 0 1) n))) (or (<= (+ (+ j 1) (+ (* (- 0 1) n) (- k 1))) (- 0 1)) (and (or (<= (- k 1) (- 0 1)) (<= (+ (+ j 1) (+ (* (- 0 1) n) (- k 1))) (- 0 1))) (and (<= 1 (+ (+ j 1) (* (- 0 1) n))) (or (<= (+ (+ j 1) (+ (* (- 0 1) n) (- k 1))) (- 0 1)) (and (<= 1 (+ (+ j 1) (* (- 0 1) n))) (or (<= (- k 1) (- 0 1)) (<= (+ (+ j 1) (+ (* (- 0 1) n) (- k 1))) (- 0 1))))))))))))))
))
(check-sat)
(pop 1)
(push 1)
(set-info :boogie-vc-id |invariant inference check|)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (not (and (not (or (<= (+ j (+ (* (- 0 1) n) k)) (- 0 1)) (and (or (<= k (- 0 1)) (<= (+ j (+ (* (- 0 1) n) k)) (- 0 1))) (and (or (<= (+ j (+ (* (- 0 1) n) k)) (- 0 1)) (and (<= 1 (+ j (* (- 0 1) n))) (or (<= k (- 0 1)) (<= (+ j (+ (* (- 0 1) n) k)) (- 0 1))))) (and (<= 1 (+ j (* (- 0 1) n))) (or (<= (+ j (+ (* (- 0 1) n) k)) (- 0 1)) (and (or (<= k (- 0 1)) (<= (+ j (+ (* (- 0 1) n) k)) (- 0 1))) (and (<= 1 (+ j (* (- 0 1) n))) (or (<= (+ j (+ (* (- 0 1) n) k)) (- 0 1)) (and (<= 1 (+ j (* (- 0 1) n))) (or (<= k (- 0 1)) (<= (+ j (+ (* (- 0 1) n) k)) (- 0 1))))))))))))) (not (< j n))))
))
(check-sat)
(pop 1)
